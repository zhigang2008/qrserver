// Generated by running
//		maketables -url=http://www.unicode.org/Public/cldr/23/core.zip -iana=http://www.iana.org/assignments/language-subtag-registry
// DO NOT EDIT

package language

type fromTo struct {
	from uint16
	to   uint16
}

const nonCanonicalUnd = 415

const (
	lang_de  = 82
	lang_en  = 97
	lang_fil = 107
	lang_fr  = 111
	lang_it  = 162
	lang_mo  = 266
	lang_mul = 272
	lang_nb  = 279
	lang_no  = 290
	lang_sh  = 346
	lang_sr  = 362
	lang_tl  = 392
)

const langPrivateStart = 11260

const langPrivateEnd = 11779

// lang holds an alphabetically sorted list of ISO-639 language identifiers.
// All entries are 4 bytes. The index of the identifier (divided by 4) is the language tag.
// For 2-byte language identifiers, the two successive bytes have the following meaning:
//     - if the first letter of the 2- and 3-letter ISO codes are the same:
//       the second and third letter of the 3-letter ISO code.
//     - otherwise: a 0 and a by 2 bits right-shifted index into altLangISO3.
// For 3-byte language identifiers the 4th byte is 0.
// Size: 1796 bytes
var lang string = "" +
	"---\x00aaarabbkace\x00ady\x00aeveaffragq\x00akkaalt\x00ammha" +
	"mo\x00anrgarraassmasa\x00ast\x00avvaawa\x00ayymazzebaakbal" +
	"\x00ban\x00bas\x00bax\x00bbc\x00beelbem\x00bez\x00bfq\x00bft" +
	"\x00bfy\x00bgulbhihbhb\x00bho\x00biisbik\x00bin\x00bjj\x00bk" +
	"u\x00bmambnenboodbqv\x00brrebra\x00brx\x00bsosbss\x00btv\x00" +
	"bua\x00buc\x00bug\x00bya\x00byn\x00caatcch\x00ccp\x00ceheceb" +
	"\x00cgg\x00chhachk\x00chm\x00chp\x00chr\x00cja\x00cjm\x00ckb" +
	"\x00cooscrrecrk\x00csescsb\x00cuhucvhvcyymdaandar\x00dav\x00" +
	"deeuden\x00dgr\x00dje\x00doi\x00dsb\x00dua\x00dvivdyo\x00dyu" +
	"\x00dzzoebu\x00eeweefi\x00elllenngeopoes\x00\x05etsteuusewo" +
	"\x00faasfan\x00ffulfiinfil\x00fjijfoaofon\x00frrafrr\x00frs" +
	"\x00fur\x00fyrygalegaa\x00gag\x00gbm\x00gcr\x00gdlagez\x00gi" +
	"l\x00gllggnrngon\x00gor\x00grt\x00gsw\x00guujguz\x00gvlvgwi" +
	"\x00haauhaw\x00heebhiinhil\x00hne\x00hnn\x00homohoc\x00hoj" +
	"\x00hrrvhsb\x00htathuunhyyehzerianaibb\x00idndieleigboiiiiik" +
	"pkilo\x00inndinh\x00iodoisslittaiukuiw\x00\x03japnjgo\x00ji" +
	"\x00\x06jmc\x00jvavjwavkaatkaa\x00kab\x00kaj\x00kam\x00kbd" +
	"\x00kcg\x00kde\x00kdt\x00kea\x00ken\x00kfo\x00kfr\x00kgonkha" +
	"\x00khb\x00khq\x00kht\x00kiikkjuakkazkkj\x00klalkln\x00kmhmk" +
	"mb\x00knankoorkoi\x00kok\x00kos\x00kpe\x00kraukrc\x00kri\x00" +
	"krl\x00kru\x00ksasksb\x00ksf\x00ksh\x00kuurkum\x00kvomkw\x00" +
	"\x01kyirlaatlag\x00lah\x00lbtzlbe\x00lcp\x00lep\x00lez\x00lg" +
	"ugliimlif\x00lis\x00lki\x00lmn\x00lninloaolol\x00ltitluublua" +
	"\x00luo\x00luy\x00lvavlwl\x00mad\x00mag\x00mai\x00mak\x00man" +
	"\x00mas\x00mdf\x00mdh\x00mdr\x00men\x00mer\x00mfe\x00mglgmgh" +
	"\x00mgo\x00mhahmirimin\x00mis\x00mkkdmlalmnonmni\x00mnk\x00m" +
	"nw\x00moolmos\x00mrarmssamtltmua\x00mul\x00mwr\x00myyamyv" +
	"\x00naaunap\x00naq\x00nbobnddends\x00neepnew\x00ngdoniu\x00n" +
	"lldnmg\x00nnnonnh\x00noornod\x00nqo\x00nrblnso\x00nus\x00nva" +
	"vnyyanym\x00nyn\x00occiojjiomrmorriossspaanpag\x00pam\x00pap" +
	"\x00pau\x00piliplolpon\x00prd\x00psusptorquueraj\x00rcf\x00r" +
	"ej\x00rjs\x00rkt\x00rmohrnunroonrof\x00ruusrw\x00\x04rwk\x00" +
	"saansaf\x00sah\x00saq\x00sas\x00sat\x00saz\x00sbp\x00scrdscn" +
	"\x00sco\x00sdndsdh\x00semeseh\x00ses\x00sgagsh\x00\x02shi" +
	"\x00shn\x00siinsid\x00sklksllvsmmosma\x00smj\x00smn\x00sms" +
	"\x00snnasnk\x00soomsqqisrrpsrn\x00srr\x00ssswssy\x00stotsuun" +
	"suk\x00sus\x00svweswwaswb\x00swc\x00syl\x00syr\x00taamtbw" +
	"\x00tcy\x00tdd\x00teeltem\x00teo\x00tet\x00tggkthhatiirtig" +
	"\x00tiv\x00tkuktkl\x00tlgltmh\x00tnsntoontpi\x00trurtrv\x00t" +
	"ssotsg\x00ttattts\x00tum\x00tvl\x00twwitwq\x00tyahtyv\x00tzm" +
	"\x00udm\x00ugigukkruli\x00umb\x00und\x00unr\x00unx\x00urrduz" +
	"zbvai\x00veenviievoolvun\x00walnwae\x00wal\x00war\x00woolxhh" +
	"oxog\x00xsr\x00yao\x00yap\x00yav\x00yiidyoorzahazbl\x00zhhoz" +
	"uulzxx\x00zza\x00\xff\xff\xff\xff"

const langNoIndexOffset = 444

// langNoIndex is a bit vector of all 3-letter language codes that are not used as an index
// in lookup tables. The language ids for these language codes are derived directly
// from the letters and are not consecutive.
// Size: 2197 bytes, 2197 elements
var langNoIndex = [2197]uint8{
	255, 253, 253, 254, 239, 255, 191, 219, 251, 255, 254, 250,
	247, 31, 60, 87, 111, 151, 115, 248, 255, 255, 255, 112,
	191, 3, 255, 255, 207, 5, 133, 98, 233, 255, 253, 127,
	255, 255, 255, 119, 255, 255, 255, 255, 255, 255, 255, 227,
	233, 255, 255, 255, 77, 184, 2, 122, 190, 255, 255, 255,
	254, 255, 247, 255, 255, 255, 255, 223, 43, 244, 241, 240,
	93, 231, 159, 20, 7, 32, 223, 237, 159, 63, 201, 33,
	248, 191, 238, 255, 255, 255, 255, 255, 255, 127, 255, 255,
	255, 255, 127, 253, 255, 255, 255, 247, 127, 255, 255, 255,
	255, 255, 255, 231, 191, 255, 255, 255, 255, 239, 255, 255,
	255, 255, 191, 255, 255, 255, 255, 223, 255, 255, 243, 255,
	251, 47, 255, 255, 255, 254, 255, 255, 251, 255, 255, 247,
	255, 255, 253, 255, 255, 255, 127, 223, 255, 255, 255, 254,
	255, 255, 223, 255, 255, 223, 251, 255, 255, 254, 255, 255,
	255, 255, 255, 247, 127, 191, 249, 213, 173, 127, 64, 255,
	156, 193, 67, 44, 8, 36, 65, 0, 80, 68, 0, 128,
	187, 255, 242, 159, 180, 66, 69, 214, 155, 52, 136, 246,
	123, 231, 23, 86, 85, 125, 14, 28, 55, 113, 243, 239,
	159, 255, 93, 56, 101, 8, 0, 16, 188, 255, 191, 255,
	255, 247, 119, 55, 62, 135, 199, 223, 255, 0, 129, 0,
	176, 5, 128, 0, 0, 0, 0, 3, 64, 0, 0, 146,
	33, 208, 255, 125, 255, 222, 254, 94, 4, 0, 2, 100,
	141, 25, 193, 223, 123, 34, 0, 0, 0, 223, 109, 222,
	38, 229, 217, 243, 254, 255, 253, 207, 159, 20, 1, 12,
	134, 0, 209, 0, 240, 197, 103, 95, 214, 137, 94, 183,
	237, 239, 3, 0, 2, 0, 0, 0, 192, 119, 218, 87,
	144, 105, 1, 44, 86, 123, 244, 255, 127, 127, 0, 0,
	0, 1, 8, 70, 0, 0, 0, 176, 20, 7, 81, 22,
	10, 0, 1, 0, 0, 0, 17, 73, 0, 0, 96, 16,
	0, 0, 0, 16, 0, 0, 68, 4, 0, 16, 128, 4,
	24, 0, 0, 4, 0, 128, 40, 4, 0, 0, 80, 213,
	45, 16, 100, 53, 36, 83, 245, 212, 189, 194, 205, 1,
	0, 128, 0, 64, 0, 0, 0, 0, 0, 4, 23, 57,
	1, 217, 87, 137, 33, 152, 167, 0, 0, 1, 64, 130,
	0, 0, 0, 4, 0, 0, 0, 2, 1, 64, 0, 68,
	0, 0, 176, 254, 171, 57, 0, 2, 0, 0, 0, 4,
	0, 0, 0, 0, 0, 32, 0, 64, 4, 0, 0, 0,
	2, 0, 0, 0, 16, 129, 168, 5, 0, 0, 0, 0,
	4, 32, 4, 166, 8, 4, 0, 8, 1, 80, 0, 0,
	8, 49, 134, 64, 0, 0, 0, 0, 64, 0, 3, 117,
	2, 16, 8, 4, 0, 0, 0, 224, 59, 179, 19, 0,
	128, 0, 17, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 255, 255, 255, 255, 223, 207, 131, 162,
	192, 255, 223, 39, 207, 31, 197, 3, 16, 32, 178, 197,
	166, 69, 37, 155, 3, 207, 248, 223, 3, 212, 64, 16,
	1, 14, 0, 227, 147, 84, 155, 56, 241, 127, 247, 109,
	249, 255, 255, 125, 4, 8, 0, 1, 33, 18, 60, 95,
	253, 15, 133, 79, 64, 64, 0, 4, 255, 253, 255, 214,
	232, 27, 244, 55, 163, 13, 0, 0, 32, 123, 57, 2,
	5, 132, 0, 240, 255, 127, 254, 0, 24, 4, 129, 0,
	0, 0, 128, 16, 148, 28, 1, 0, 0, 0, 0, 0,
	16, 64, 0, 4, 8, 180, 254, 165, 12, 64, 0, 0,
	17, 4, 4, 108, 0, 96, 240, 255, 251, 127, 230, 24,
	5, 159, 223, 110, 3, 0, 17, 0, 0, 0, 64, 5,
	181, 182, 128, 40, 4, 0, 4, 81, 226, 255, 253, 63,
	5, 9, 8, 5, 64, 0, 0, 0, 0, 16, 0, 0,
	8, 0, 0, 0, 0, 161, 2, 108, 229, 72, 20, 136,
	32, 192, 71, 128, 7, 0, 0, 0, 204, 80, 64, 36,
	133, 71, 132, 64, 32, 16, 0, 32, 2, 80, 136, 17,
	0, 209, 172, 238, 80, 19, 29, 17, 105, 6, 89, 235,
	51, 8, 0, 32, 5, 64, 16, 0, 0, 0, 80, 68,
	150, 73, 214, 93, 167, 129, 69, 151, 251, 0, 16, 0,
	8, 0, 128, 0, 64, 69, 0, 1, 2, 0, 1, 64,
	128, 0, 6, 8, 248, 235, 247, 57, 196, 153, 22, 0,
	0, 12, 4, 1, 32, 32, 221, 162, 1, 0, 0, 0,
	18, 68, 0, 0, 4, 16, 240, 157, 149, 19, 0, 128,
	0, 0, 208, 18, 64, 0, 16, 240, 144, 98, 76, 210,
	2, 1, 10, 0, 70, 4, 0, 8, 2, 0, 32, 192,
	0, 128, 6, 0, 8, 0, 0, 0, 0, 240, 216, 239,
	21, 2, 8, 0, 0, 1, 0, 0, 0, 0, 16, 1,
	0, 16, 0, 0, 0, 255, 215, 227, 253, 255, 255, 255,
	255, 255, 127, 255, 255, 254, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 223, 255, 251, 255, 255, 219, 253, 255, 255,
	127, 254, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	253, 255, 223, 191, 220, 255, 255, 255, 255, 255, 255, 255,
	255, 254, 251, 255, 255, 255, 255, 255, 255, 255, 254, 255,
	253, 255, 255, 255, 255, 255, 255, 255, 239, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 123, 253, 221, 223, 255,
	188, 152, 5, 44, 255, 7, 240, 255, 255, 127, 0, 8,
	0, 195, 61, 27, 6, 230, 114, 240, 255, 124, 127, 68,
	34, 48, 159, 123, 30, 253, 255, 87, 242, 255, 63, 255,
	242, 30, 149, 247, 255, 255, 71, 128, 1, 2, 0, 0,
	64, 85, 159, 138, 217, 217, 14, 17, 133, 81, 208, 243,
	255, 119, 0, 1, 5, 209, 88, 88, 0, 0, 0, 16,
	4, 2, 0, 32, 10, 128, 123, 182, 253, 254, 254, 255,
	255, 255, 255, 255, 255, 239, 255, 255, 223, 127, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 247, 255, 255, 219, 119,
	255, 255, 127, 255, 255, 255, 239, 255, 189, 255, 255, 251,
	255, 255, 255, 223, 127, 253, 255, 247, 255, 255, 247, 255,
	255, 255, 251, 255, 239, 255, 255, 255, 255, 255, 127, 223,
	247, 191, 239, 247, 255, 255, 255, 255, 255, 255, 255, 255,
	254, 255, 255, 127, 255, 255, 255, 255, 255, 252, 255, 253,
	127, 255, 255, 158, 190, 255, 238, 255, 127, 247, 127, 2,
	130, 4, 255, 255, 255, 255, 215, 239, 255, 255, 247, 254,
	226, 158, 231, 255, 247, 255, 86, 189, 205, 255, 255, 255,
	255, 255, 239, 255, 253, 255, 125, 15, 167, 81, 4, 68,
	19, 208, 85, 175, 166, 253, 189, 255, 67, 93, 91, 255,
	255, 255, 63, 32, 20, 0, 87, 81, 130, 101, 245, 76,
	226, 255, 255, 223, 64, 5, 197, 5, 0, 34, 0, 116,
	105, 16, 8, 4, 65, 0, 1, 6, 0, 0, 0, 0,
	0, 81, 96, 5, 4, 1, 0, 0, 6, 1, 32, 0,
	24, 1, 146, 177, 253, 103, 75, 6, 149, 0, 87, 237,
	251, 76, 157, 123, 131, 4, 98, 64, 0, 21, 66, 0,
	0, 0, 84, 131, 249, 95, 16, 140, 201, 70, 223, 247,
	19, 49, 0, 0, 0, 0, 0, 144, 0, 0, 0, 0,
	0, 10, 16, 0, 1, 64, 0, 240, 223, 253, 191, 125,
	186, 207, 255, 191, 66, 20, 132, 97, 176, 255, 93, 122,
	4, 2, 0, 65, 45, 20, 37, 247, 237, 241, 191, 239,
	63, 0, 0, 2, 199, 224, 30, 252, 187, 255, 253, 251,
	247, 253, 245, 255, 255, 252, 245, 237, 71, 244, 127, 16,
	1, 1, 196, 127, 255, 247, 221, 249, 95, 5, 134, 235,
	245, 119, 189, 61, 0, 0, 0, 67, 113, 66, 0, 64,
	0, 0, 1, 67, 25, 0, 8, 0, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255,
	255, 239, 189, 231, 87, 238, 19, 93, 9, 193, 64, 33,
	250, 23, 1, 128, 0, 0, 0, 0, 240, 254, 255, 191,
	0, 35, 0, 32, 0, 0, 8, 0, 0, 48, 181, 227,
	16, 0, 0, 0, 17, 36, 22, 0, 1, 2, 16, 131,
	163, 1, 80, 0, 1, 131, 17, 72, 0, 0, 0, 240,
	223, 255, 127, 18, 170, 16, 127, 216, 82, 0, 128, 32,
	0, 0, 0, 0, 64, 16, 2, 2, 9, 0, 16, 66,
	0, 97, 95, 156, 49, 0, 0, 0, 1, 84, 2, 32,
	0, 0, 1, 0, 66, 1, 0, 0, 0, 191, 223, 255,
	255, 255, 255, 63, 223, 94, 207, 189, 191, 175, 255, 255,
	127, 75, 64, 16, 241, 253, 239, 253, 247, 255, 255, 251,
	223, 255, 111, 241, 123, 241, 127, 255, 127, 255, 238, 247,
	239, 191, 255, 219, 255, 223, 255, 253, 126, 191, 87, 247,
	111, 129, 118, 31, 220, 247, 253, 255, 255, 255, 251, 254,
	255, 95, 87, 31, 239, 95, 80, 24, 98, 254, 255, 159,
	21, 159, 21, 15, 125, 70, 125, 161, 130, 241, 247, 126,
	255, 255, 255, 255, 255, 253, 221, 255, 191, 253, 246, 95,
	254, 31, 64, 152, 2, 255, 227, 255, 243, 246, 254, 223,
	255, 223, 127, 80, 30, 21, 123, 180, 223, 190, 255, 255,
	247, 247, 255, 247, 127, 255, 255, 254, 219, 247, 215, 249,
	239, 47, 128, 191, 197, 255, 255, 255, 255, 159, 255, 255,
	255, 255, 253, 191, 223, 127, 6, 29, 87, 255, 248, 219,
	93, 199, 125, 22, 185, 234, 107, 160, 30, 32, 0, 48,
	2, 4, 36, 72, 4, 0, 0, 64, 212, 6, 4, 0,
	0, 4, 0, 4, 0, 48, 1, 6, 80, 0, 8, 0,
	0, 0, 36, 0, 4, 0, 16, 140, 88, 213, 77, 15,
	20, 79, 241, 22, 68, 209, 74, 10, 64, 0, 0, 64,
	0, 8, 0, 0, 0, 220, 255, 235, 31, 88, 8, 65,
	4, 160, 4, 0, 48, 18, 64, 34, 0, 16, 0, 0,
	0, 0, 0, 0, 1, 0, 0, 0, 128, 16, 16, 191,
	111, 147, 0, 1, 0, 0, 0, 0, 0, 0, 0, 192,
	128, 45, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0,
	192, 134, 194, 2, 0, 0, 0, 1, 223, 24, 0, 0,
	18, 240, 255, 121, 63, 0, 37, 0, 0, 0, 10, 0,
	0, 0, 0, 0, 0, 64, 0, 16, 3, 0, 9, 32,
	0, 0, 1, 0, 0, 131, 0, 0, 0, 0, 1, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255,
	255, 255, 207, 126, 174, 17, 16, 0, 0, 146, 1, 68,
	205, 241, 94, 0, 1, 0, 48, 20, 4, 85, 16, 1,
	4, 246, 63, 122, 5, 4, 0, 176, 128, 0, 85, 85,
	151, 125, 159, 113, 204, 120, 213, 67, 245, 87, 103, 20,
	1, 0, 0, 0, 0, 0, 44, 247, 219, 31, 80, 96,
	3, 104, 5, 16, 139, 56, 186, 1, 0, 0, 48, 0,
	36, 68, 0, 0, 16, 3, 17, 2, 1, 0, 0, 240,
	149, 255, 215, 215, 188, 112, 214, 120, 122, 21, 80, 0,
	164, 132, 233, 65, 0, 0, 0, 107, 57, 82, 116, 0,
	232, 48, 144, 42, 146, 0, 0, 2, 255, 239, 255, 127,
	133, 83, 244, 239, 255, 255, 114, 153, 199, 76, 245, 66,
	84, 221, 127, 20, 0, 128, 192, 86, 204, 22, 159, 251,
	55, 125, 239, 255, 189, 164, 175, 1, 68, 24, 1, 93,
	78, 74, 8, 80, 40, 48, 224, 128, 16, 32, 36, 0,
	255, 255, 255, 111, 254, 1, 6, 136, 10, 64, 22, 1,
	1, 21, 43, 62, 1, 0, 0, 16, 144, 41, 69, 2,
	2, 0, 225, 191, 191, 3, 0, 0, 16, 212, 167, 209,
	84, 158, 68, 223, 253, 143, 102, 179, 85, 32, 212, 195,
	216, 48, 61, 128, 0, 0, 0, 76, 244, 16, 197, 132,
	110, 80, 0, 34, 80, 127, 191, 219, 7, 0, 32, 16,
	132, 178, 69, 16, 6, 68, 0, 0, 18, 2, 17, 0,
	240, 255, 253, 63, 5, 0, 18, 129, 0, 0, 0, 8,
	0, 16, 12, 2, 0, 0, 0, 0, 131, 48, 2, 40,
	132, 0, 51, 192, 35, 36, 0, 0, 0, 203, 228, 58,
	66, 200, 20, 241, 255, 255, 127, 22, 1, 1, 132, 80,
	7, 252, 255, 255, 15, 1, 0, 64, 16, 56, 1, 1,
	28, 18, 64, 225, 118, 22, 8, 3, 16, 0, 0, 0,
	1, 0, 0, 0, 0, 0, 32, 36, 10, 64, 128, 0,
	0,
}

// altLangISO3 holds an alphabetically sorted list of 3-letter language code alternatives
// to 2-letter language codes that cannot be derived using the method described above.
// Each 3-letter code is followed by its 1-byte langID.
// Size: 48 bytes
var altLangISO3 string = "---\x00cor\x00hbs\x01heb\x02kin\x03spa\x04yid\x05\xff\xff\xff\xff"

// altLangIndex is used to convert indexes in altLangISO3 to langIDs.
// Size: 12 bytes, 6 elements
var altLangIndex = [6]uint16{
	215, 346, 164, 327, 99, 167,
}

// langOldMap maps deprecated langIDs to their suggested replacements.
// Size: 128 bytes, 32 elements
var langOldMap = [32]fromTo{
	{from: 0x9e, to: 0x98},
	{from: 0xa4, to: 0x88},
	{from: 0xa7, to: 0x1b4},
	{from: 0xaa, to: 0xa9},
	{from: 0x10a, to: 0x144},
	{from: 0x443, to: 0x2625},
	{from: 0x54d, to: 0xb6d},
	{from: 0x748, to: 0x2fac},
	{from: 0x7ff, to: 0x22e4},
	{from: 0x808, to: 0x84d},
	{from: 0x846, to: 0x3eb3},
	{from: 0xb69, to: 0x1ce4},
	{from: 0xb78, to: 0x2b24},
	{from: 0x11a9, to: 0xa25},
	{from: 0x1603, to: 0x198b},
	{from: 0x16fe, to: 0x283a},
	{from: 0x1810, to: 0x119f},
	{from: 0x1cc7, to: 0x1d67},
	{from: 0x21da, to: 0x7e5},
	{from: 0x2353, to: 0x233e},
	{from: 0x23ef, to: 0x233e},
	{from: 0x299d, to: 0x221},
	{from: 0x2aef, to: 0x1f0c},
	{from: 0x3178, to: 0x155a},
	{from: 0x34bc, to: 0x2eb2},
	{from: 0x34f6, to: 0x3630},
	{from: 0x351c, to: 0x3c4a},
	{from: 0x353f, to: 0x2b24},
	{from: 0x3f48, to: 0x1fd},
	{from: 0x4139, to: 0x2fac},
	{from: 0x4254, to: 0x2093},
	{from: 0x429a, to: 0x4538},
}

// langMacroMap maps languages to their macro language replacement, if applicable.
// Size: 252 bytes, 63 elements
var langMacroMap = [63]fromTo{
	{from: 0x117, to: 0x122},
	{from: 0x195, to: 0x8},
	{from: 0x2ba, to: 0x1b3b},
	{from: 0x2ec, to: 0x169},
	{from: 0x377, to: 0xd},
	{from: 0x43d, to: 0x13},
	{from: 0x44f, to: 0x14},
	{from: 0x496, to: 0x16},
	{from: 0x49f, to: 0x26},
	{from: 0x6c0, to: 0xee},
	{from: 0x6c7, to: 0x34},
	{from: 0x825, to: 0x178},
	{from: 0x849, to: 0x1b8},
	{from: 0x943, to: 0x48},
	{from: 0xa52, to: 0x56},
	{from: 0xa61, to: 0x111},
	{from: 0xa82, to: 0xa85},
	{from: 0xa88, to: 0x1bb},
	{from: 0xd5a, to: 0x64},
	{from: 0xd8e, to: 0xf5},
	{from: 0xe2a, to: 0x9c},
	{from: 0xf03, to: 0x8},
	{from: 0x10fa, to: 0x69},
	{from: 0x11ad, to: 0x12e},
	{from: 0x11bc, to: 0x134f},
	{from: 0x12f4, to: 0x7e},
	{from: 0x13a2, to: 0x7d},
	{from: 0x1404, to: 0x11ae},
	{from: 0x1493, to: 0x1440},
	{from: 0x14a0, to: 0x157d},
	{from: 0x1514, to: 0x3315},
	{from: 0x17e4, to: 0xa3},
	{from: 0x1ce4, to: 0x106},
	{from: 0x1d6d, to: 0xd4},
	{from: 0x1d78, to: 0xcb},
	{from: 0x1d7c, to: 0xb8},
	{from: 0x1d83, to: 0xc8},
	{from: 0x1dbf, to: 0xd6},
	{from: 0x1eec, to: 0x5b4},
	{from: 0x20fc, to: 0xef},
	{from: 0x2233, to: 0x41},
	{from: 0x2383, to: 0x13d},
	{from: 0x259e, to: 0x11a},
	{from: 0x27a4, to: 0x12d},
	{from: 0x2886, to: 0x12f},
	{from: 0x2986, to: 0x13a},
	{from: 0x29d2, to: 0x67},
	{from: 0x2a89, to: 0xfd},
	{from: 0x2aab, to: 0xdb},
	{from: 0x2e61, to: 0x13c},
	{from: 0x2ff0, to: 0x3018},
	{from: 0x32e2, to: 0xc2},
	{from: 0x3300, to: 0x151},
	{from: 0x3387, to: 0x174},
	{from: 0x35e6, to: 0x189},
	{from: 0x37d8, to: 0xa1b},
	{from: 0x3923, to: 0x1a3},
	{from: 0x4002, to: 0xca},
	{from: 0x4057, to: 0x53},
	{from: 0x416d, to: 0x1b4},
	{from: 0x43c8, to: 0x43cf},
	{from: 0x45a0, to: 0x10d},
	{from: 0x4631, to: 0x1b6},
}

// tagAlias holds a mapping from legacy and grandfathered tags to their language tag.
// Size: 497 bytes
var tagAlias = map[string]uint16{
	"aa-SAAHO":   366,
	"art-lojban": 6568,
	"i-ami":      764,
	"i-bnn":      1471,
	"i-hak":      5186,
	"i-klingon":  13581,
	"i-lux":      220,
	"i-navajo":   296,
	"i-pwn":      11169,
	"i-tao":      13302,
	"i-tay":      13312,
	"i-tsu":      13776,
	"no-BOKMAL":  279,
	"no-NYNORSK": 288,
	"no-bok":     279,
	"no-nyn":     288,
	"sgn-BE-FR":  12743,
	"sgn-BE-NL":  14815,
	"sgn-CH-DE":  12774,
	"zh-guoyu":   440,
	"zh-hakka":   5186,
	"zh-min":     0,
	"zh-min-nan": 9245,
	"zh-xiang":   5657,
}

const (
	scrLatn = 75
	scrHani = 46
	scrHans = 48
	scrQaaa = 119
	scrQaai = 127
	scrQabx = 168
	scrZinh = 212
	scrZyyy = 216
	scrZzzz = 217
)

// script is an alphabetically sorted list of ISO 15924 codes. The index
// of the script in the string, divided by 4, is the internal scriptID.
// Size: 892 bytes
var script string = "" +
	"----AfakAghbAhomArabArmiArmnAvstBaliBamuBassBatkBengBlisBopo" +
	"BrahBraiBugiBuhdCakmCansCariChamCherCirtCoptCprtCyrlCyrsDeva" +
	"DsrtDuplEgydEgyhEgypElbaEthiGeokGeorGlagGothGranGrekGujrGuru" +
	"HangHaniHanoHansHantHatrHebrHiraHluwHmngHrktHungIndsItalJava" +
	"JpanJurcKaliKanaKharKhmrKhojKndaKoreKpelKthiLanaLaooLatfLatg" +
	"LatnLepcLimbLinaLinbLisuLomaLyciLydiMahjMandManiMayaMendMerc" +
	"MeroMlymModiMongMoonMrooMteiMultMymrNarbNbatNkgbNkooNshuOgam" +
	"OlckOrkhOryaOsmaPalmPaucPermPhagPhliPhlpPhlvPhnxPlrdPrtiQaaa" +
	"QaabQaacQaadQaaeQaafQaagQaahQaaiQaajQaakQaalQaamQaanQaaoQaap" +
	"QaaqQaarQaasQaatQaauQaavQaawQaaxQaayQaazQabaQabbQabcQabdQabe" +
	"QabfQabgQabhQabiQabjQabkQablQabmQabnQaboQabpQabqQabrQabsQabt" +
	"QabuQabvQabwQabxRjngRoroRunrSamrSaraSarbSaurSgnwShawShrdSidd" +
	"SindSinhSoraSundSyloSyrcSyreSyrjSyrnTagbTakrTaleTaluTamlTang" +
	"TavtTeluTengTfngTglgThaaThaiTibtTirhUgarVaiiVispWaraWoleXpeo" +
	"XsuxYiiiZinhZmthZsymZxxxZyyyZzzz\xff\xff\xff\xff"

// suppressScript is an index from langID to the dominant script for that language,
// if it exists.  If a script is given, it should be suppressed from the language tag.
// Size: 444 bytes, 444 elements
var suppressScript = [444]uint8{
	0, 0, 27, 0, 0, 0, 75, 0, 0, 0, 36, 0,
	0, 4, 12, 0, 0, 0, 0, 75, 0, 0, 0, 0,
	0, 0, 0, 27, 0, 0, 0, 0, 0, 27, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 12, 0, 0, 0, 0,
	0, 75, 0, 0, 0, 0, 0, 0, 0, 75, 0, 0,
	0, 0, 0, 75, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 75, 0, 0, 0, 75, 75, 0, 0, 75, 0,
	0, 0, 0, 75, 0, 200, 0, 0, 202, 0, 0, 0,
	42, 75, 75, 75, 75, 75, 0, 4, 0, 0, 75, 0,
	75, 75, 0, 75, 75, 75, 0, 75, 75, 0, 0, 0,
	0, 0, 0, 0, 75, 75, 0, 0, 0, 75, 43, 0,
	75, 0, 0, 0, 51, 29, 0, 0, 0, 0, 0, 0,
	75, 75, 75, 75, 6, 0, 0, 0, 75, 0, 0, 0,
	0, 0, 75, 0, 0, 75, 75, 0, 51, 60, 0, 0,
	0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27,
	0, 75, 0, 65, 0, 67, 68, 0, 29, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 75, 0, 0, 75, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 75, 72, 0, 75, 0, 0, 0, 0, 75,
	0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 75, 0,
	0, 75, 0, 0, 75, 0, 0, 0, 27, 91, 0, 0,
	0, 0, 75, 0, 29, 75, 75, 0, 0, 0, 98, 0,
	75, 0, 0, 75, 75, 75, 29, 0, 0, 75, 75, 0,
	75, 0, 75, 0, 102, 75, 75, 0, 0, 75, 0, 0,
	0, 0, 75, 107, 0, 44, 0, 0, 0, 0, 0, 75,
	0, 0, 4, 75, 75, 0, 0, 0, 0, 0, 75, 75,
	75, 0, 27, 75, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 75, 0, 0,
	0, 181, 0, 75, 75, 75, 0, 0, 0, 0, 0, 0,
	75, 75, 0, 0, 0, 75, 0, 75, 0, 0, 0, 75,
	75, 0, 0, 0, 0, 193, 0, 0, 0, 196, 75, 0,
	0, 0, 201, 36, 0, 0, 0, 75, 75, 75, 75, 75,
	75, 75, 0, 75, 0, 0, 0, 0, 75, 0, 0, 0,
	0, 0, 0, 0, 27, 0, 0, 0, 0, 0, 4, 0,
	0, 75, 75, 0, 0, 0, 0, 0, 0, 0, 75, 0,
	0, 0, 0, 0, 51, 0, 0, 13, 0, 75, 0, 0,
}

const (
	regMD = 186
	regUS = 306
	regZZ = 354
	regXA = 320
	regXC = 322
)

// isoRegionOffset needs to be added to the index of regionISO to obtain the regionID
// for 2-letter ISO codes. (The first isoRegionOffset regionIDs are reserved for
// the UN.M49 codes used for groups.)
const isoRegionOffset = 31

// regionISO holds a list of alphabetically sorted 2-letter ISO region codes.
// Each 2-letter codes is followed by two bytes with the following meaning:
//     - [A-Z}{2}: the first letter of the 2-letter code plus these two
//                 letters form the 3-letter ISO code.
//     - 0, n:     index into altRegionISO3.
// Size: 1316 bytes
var regionISO string = "" +
	"AAAAACSCADNDAEREAFFGAGTGAIIAALLBAMRMANNTAOGOAQTAARRGASSMATUT" +
	"AUUSAWBWAXLAAZZEBAIHBBRBBDGDBEELBFFABGGRBHHRBIDIBJENBLLMBMMU" +
	"BNRNBOOLBQESBRRABSHSBTTNBUURBVVTBWWABYLRBZLZCAANCCCKCDODCFAF" +
	"CGOGCHHECIIVCKOKCLHLCMMRCNHNCOOLCPPTCRRICS\x00\x00CTTECUUBCV" +
	"PVCWUWCXXRCYYPCZZEDDDRDEEUDGGADJJIDKNKDMMADOOMDYHYDZZAEA  EC" +
	"CUEESTEGGYEHSHERRIESSPETTHEU\x00\x03FIINFJJIFKLKFMSMFOROFQ" +
	"\x00\x18FRRAFXXXGAABGBBRGDRDGEEOGFUFGGGYGHHAGIIBGLRLGMMBGNIN" +
	"GPLPGQNQGRRCGS\x00\x06GTTMGUUMGWNBGYUYHKKGHMMDHNNDHRRVHTTIHU" +
	"UNHVVOIC  IDDNIERLILSRIMMNINNDIOOTIQRQIRRNISSLITTAJEEYJMAMJO" +
	"ORJPPNJTTNKEENKGGZKHHMKIIRKM\x00\tKNNAKP\x00\fKRORKWWTKY\x00" +
	"\x0fKZAZLAAOLBBNLCCALIIELKKALRBRLSSOLTTULUUXLVVALYBYMAARMCCO" +
	"MDDAMENEMFAFMGDGMHHLMIIDMKKDMLLIMMMRMNNGMOACMPNPMQTQMRRTMSSR" +
	"MTLTMUUSMVDVMWWIMXEXMYYSMZOZNAAMNCCLNEERNFFKNGGANHHBNIICNLLD" +
	"NOORNPPLNQ\x00\x1eNRRUNTTZNUIUNZZLOMMNPAANPCCIPEERPFYFPGNGPH" +
	"HLPKAKPLOLPM\x00\x12PNCNPRRIPSSEPTRTPUUSPWLWPYRYPZCZQAATQMMM" +
	"QNNNQOOOQPPPQQQQQRRRQSSSQTTTQU\x00\x03QVVVQWWWQXXXQYYYQZZZRE" +
	"EURHHOROOURS\x00\x15RUUSRWWASAAUSBLBSCYCSDDNSEWESGGPSHHNSIVN" +
	"SJJMSKVKSLLESMMRSNENSOOMSRURSSSDSTTPSUUNSVLVSXXMSYYRSZWZTAAA" +
	"TCCATDCDTF\x00\x18TGGOTHHATJJKTKKLTLLSTMKMTNUNTOONTPMPTRURTT" +
	"TOTVUVTWWNTZZAUAKRUGGAUK  UMMIUSSAUYRYUZZBVAATVCCTVDDRVEENVG" +
	"GBVIIRVNNMVUUTWFLFWKAKWSSMXAAAXBBBXCCCXDDDXEEEXFFFXGGGXHHHXI" +
	"IIXJJJXKKKXLLLXMMMXNNNXOOOXPPPXQQQXRRRXSSSXTTTXUUUXVVVXWWWXX" +
	"XXXYYYXZZZYDMDYEEMYT\x00\x1bYUUGZAAFZMMBZRARZWWEZZZZ\xff\xff" +
	"\xff\xff"

// altRegionISO3 holds a list of 3-letter region codes that cannot be
// mapped to 2-letter codes using the default algorithm. This is a short list.
// Size: 49 bytes
var altRegionISO3 string = "SCGQUUSGSCOMPRKCYMSPMSRBATFMYTATN"

// altRegionIDs holds a list of regionIDs the positions of which match those
// of the 3-letter ISO codes in altRegionISO3.
// Size: 22 bytes, 11 elements
var altRegionIDs = [11]uint16{
	86, 111, 134, 166, 168, 171, 232, 259, 287, 348, 218,
}

// Size: 80 bytes, 20 elements
var regionOldMap = [20]fromTo{
	{from: 0x43, to: 0xc2},
	{from: 0x57, to: 0xa5},
	{from: 0x5e, to: 0x5f},
	{from: 0x65, to: 0x3a},
	{from: 0x77, to: 0x76},
	{from: 0x91, to: 0x36},
	{from: 0xa1, to: 0x131},
	{from: 0xbf, to: 0x131},
	{from: 0xd5, to: 0x13c},
	{from: 0xda, to: 0x2a},
	{from: 0xed, to: 0x131},
	{from: 0xf0, to: 0xe0},
	{from: 0xfa, to: 0x6f},
	{from: 0x101, to: 0x161},
	{from: 0x128, to: 0x124},
	{from: 0x130, to: 0x79},
	{from: 0x137, to: 0x13b},
	{from: 0x13e, to: 0x131},
	{from: 0x15a, to: 0x15b},
	{from: 0x160, to: 0x4a},
}

// m49 maps regionIDs to UN.M49 codes. The first isoRegionOffset entries are
// codes indicating collections of regions.
// Size: 710 bytes, 355 elements
var m49 = [355]uint16{
	0, 1, 2, 3, 5, 9, 11, 13, 14, 15, 17, 18,
	19, 21, 29, 30, 34, 35, 39, 53, 54, 57, 61, 142,
	143, 145, 150, 151, 154, 155, 419, 958, 0, 20, 784, 4,
	28, 660, 8, 51, 530, 24, 10, 32, 16, 40, 36, 533,
	248, 31, 70, 52, 50, 56, 854, 100, 48, 108, 204, 652,
	60, 96, 68, 535, 76, 44, 64, 104, 74, 72, 112, 84,
	124, 166, 180, 140, 178, 756, 384, 184, 152, 120, 156, 170,
	0, 188, 891, 296, 192, 132, 531, 162, 196, 203, 278, 276,
	0, 262, 208, 212, 214, 204, 12, 0, 218, 233, 818, 732,
	232, 724, 231, 967, 246, 242, 238, 583, 234, 0, 250, 249,
	266, 826, 308, 268, 254, 831, 288, 292, 304, 270, 324, 312,
	226, 300, 239, 320, 316, 624, 328, 344, 334, 340, 191, 332,
	348, 854, 0, 360, 372, 376, 833, 356, 86, 368, 364, 352,
	380, 832, 388, 400, 392, 581, 404, 417, 116, 296, 174, 659,
	408, 410, 414, 136, 398, 418, 422, 662, 438, 144, 430, 426,
	440, 442, 428, 434, 504, 492, 498, 499, 663, 450, 584, 581,
	807, 466, 104, 496, 446, 580, 474, 478, 500, 470, 480, 462,
	454, 484, 458, 508, 516, 540, 562, 574, 566, 548, 558, 528,
	578, 524, 10, 520, 536, 570, 554, 512, 591, 0, 604, 258,
	598, 608, 586, 616, 666, 612, 630, 275, 620, 581, 585, 600,
	591, 634, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968,
	969, 970, 971, 972, 638, 716, 642, 688, 643, 646, 682, 90,
	690, 729, 752, 702, 654, 705, 744, 703, 694, 674, 686, 706,
	740, 728, 678, 810, 222, 534, 760, 748, 0, 796, 148, 260,
	768, 764, 762, 772, 626, 795, 788, 776, 626, 792, 780, 798,
	158, 834, 804, 800, 826, 581, 840, 858, 860, 336, 670, 704,
	862, 92, 850, 704, 548, 876, 581, 882, 973, 974, 975, 976,
	977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988,
	989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 720, 887,
	175, 891, 710, 894, 180, 716, 999,
}

// m49Index gives indexes into fromM49 based on the three most significant bits
// of a 10-bit UN.M49 code. To search an UN.M49 code in fromM49, search in
//    fromM49[m49Index[msb39(code)]:m49Index[msb3(code)+1]]
// for an entry where the first 7 bits match the 7 lsb of the UN.M49 code.
// The region code is stored in the 9 lsb of the indexed value.
// Size: 18 bytes, 9 elements
var m49Index = [9]uint16{
	0, 59, 107, 142, 180, 219, 258, 290, 332,
}

// fromM49 contains entries to map UN.M49 codes to regions. See m49Index for details.
// Size: 664 bytes, 332 elements
var fromM49 = [332]uint16{
	513, 1026, 1539, 2083, 2564, 4134, 4613, 5162, 5638, 6246, 6663, 7176,
	7689, 8236, 8714, 9227, 9740, 10273, 10765, 12329, 14372, 14862, 15375, 15921,
	16427, 17424, 17937, 18478, 19986, 20525, 22593, 24632, 25652, 26151, 26675, 27155,
	27668, 28725, 29205, 30780, 31254, 32834, 34878, 35890, 36933, 37956, 38976, 43079,
	44184, 46343, 47417, 49213, 51255, 53442, 55353, 57414, 59556, 61521, 63560, 2137,
	4267, 6219, 7191, 7704, 8369, 8729, 10526, 11290, 11803, 12368, 13340, 13853,
	14418, 15660, 17499, 19529, 21587, 23718, 24412, 25676, 26698, 28751, 30805, 32398,
	32856, 34908, 38493, 38970, 41058, 43107, 44132, 46184, 48408, 50308, 52334, 52846,
	53356, 53865, 54388, 56434, 56966, 58481, 60528, 61488, 62071, 62582, 64636, 1251,
	2335, 3169, 5240, 6267, 7297, 9963, 10335, 11358, 12383, 16510, 18559, 20645,
	22661, 24704, 26746, 28803, 30856, 32903, 34946, 37002, 39055, 40076, 41269, 43149,
	45195, 47248, 49307, 51351, 53395, 55450, 57497, 59540, 61589, 63644, 78, 2206,
	4256, 7340, 8351, 10402, 12456, 13481, 15530, 17059, 17581, 17950, 19630, 21683,
	22710, 23730, 25783, 27824, 28852, 29877, 31940, 33981, 36044, 38094, 40139, 42177,
	44233, 46278, 48327, 49354, 51405, 55481, 57539, 58554, 59067, 59592, 61624, 63695,
	223, 2256, 4315, 6361, 8407, 9256, 9818, 10799, 11545, 11839, 12508, 14545,
	18748, 21726, 23766, 25810, 27860, 29917, 31955, 34008, 35013, 35633, 36467, 37054,
	37614, 38118, 40672, 44260, 45295, 47330, 49381, 51433, 53479, 55532, 57481, 58660,
	60650, 62705, 64768, 1282, 1796, 3333, 6203, 7436, 9895, 10277, 11439, 11964,
	13544, 15670, 17681, 19734, 21766, 23826, 24835, 25864, 27920, 32011, 32527, 33083,
	33549, 34067, 36190, 39265, 41306, 43117, 45333, 45833, 47211, 49417, 51476, 53518,
	55579, 57610, 59469, 61722, 62754, 63777, 288, 2339, 4391, 6442, 8226, 10534,
	12585, 14117, 14621, 15659, 16687, 18734, 20160, 21783, 25706, 29817, 32381, 32925,
	33430, 34093, 37170, 42298, 44086, 46387, 47412, 48440, 55613, 58687, 60763, 61275,
	63062, 64863, 31775, 32498, 33011, 33524, 34037, 34550, 35063, 35576, 36089, 36463,
	37115, 37628, 38141, 38654, 39167, 39744, 40257, 40770, 41283, 41796, 42309, 42822,
	43335, 43848, 44361, 44874, 45387, 45900, 46413, 46926, 47439, 47952, 48465, 48978,
	49491, 50004, 50517, 51030, 51543, 52056, 52569, 53090,
}

// Size: 1254 bytes
var variantIndex = map[string]uint8{
	"1606nict": 0x0,
	"1694acad": 0x1,
	"1901":     0x2,
	"1959acad": 0x3,
	"1994":     0x3c,
	"1996":     0x4,
	"alalc97":  0x3e,
	"aluku":    0x5,
	"arevela":  0x6,
	"arevmda":  0x7,
	"baku1926": 0x8,
	"barla":    0x9,
	"bauddha":  0xa,
	"biscayan": 0xb,
	"biske":    0x37,
	"bohoric":  0xc,
	"boont":    0xd,
	"dajnko":   0xe,
	"ekavsk":   0xf,
	"emodeng":  0x10,
	"fonipa":   0x3f,
	"fonupa":   0x40,
	"fonxsamp": 0x41,
	"hepburn":  0x11,
	"heploc":   0x3d,
	"hognorsk": 0x12,
	"ijekavsk": 0x13,
	"itihasa":  0x14,
	"jauer":    0x15,
	"jyutping": 0x16,
	"kkcor":    0x17,
	"kscor":    0x18,
	"laukika":  0x19,
	"lipaw":    0x38,
	"luna1918": 0x1a,
	"metelko":  0x1b,
	"monoton":  0x1c,
	"ndyuka":   0x1d,
	"nedis":    0x1e,
	"njiva":    0x39,
	"nulik":    0x1f,
	"osojs":    0x3a,
	"pamaka":   0x20,
	"petr1708": 0x21,
	"pinyin":   0x22,
	"polyton":  0x23,
	"puter":    0x24,
	"rigik":    0x25,
	"rozaj":    0x26,
	"rumgr":    0x27,
	"scotland": 0x28,
	"scouse":   0x29,
	"solba":    0x3b,
	"sotav":    0x2a,
	"surmiran": 0x2b,
	"sursilv":  0x2c,
	"sutsilv":  0x2d,
	"tarask":   0x2e,
	"uccor":    0x2f,
	"ucrcor":   0x30,
	"ulster":   0x31,
	"unifon":   0x32,
	"vaidika":  0x33,
	"valencia": 0x34,
	"vallader": 0x35,
	"wadegile": 0x36,
}

// variantNumSpecialized is the number of specialized variants in variants.
const variantNumSpecialized = 62

const (
	curXTS = 280
	curXXX = 282
)

// currency holds an alphabetically sorted list of canonical 3-letter currency identifiers.
// Each identifier is followed by a byte of which the 6 most significant bits
// indicated the rounding and the least 2 significant bits indicate the
// number of decimal positions.
// Size: 1212 bytes
var currency string = "" +
	"---\x06ADP\x04AED\x06AFA\x06AFN\x04ALK\x06ALL\x04AMD\x04ANG" +
	"\x06AOA\x06AOK\x06AON\x06AOR\x06ARA\x06ARL\x06ARM\x06ARP\x06" +
	"ARS\x06ATS\x06AUD\x06AWG\x06AZM\x06AZN\x06BAD\x06BAM\x06BAN" +
	"\x06BBD\x06BDT\x06BEC\x06BEF\x06BEL\x06BGL\x06BGM\x06BGN\x06" +
	"BGO\x06BHD\aBIF\x04BMD\x06BND\x06BOB\x06BOL\x06BOP\x06BOV" +
	"\x06BRB\x06BRC\x06BRE\x06BRL\x06BRN\x06BRR\x06BRZ\x06BSD\x06" +
	"BTN\x06BUK\x06BWP\x06BYB\x06BYR\x04BZD\x06CAD\x06CDF\x06CHE" +
	"\x06CHF\x06CHW\x06CLE\x06CLF\x04CLP\x04CNX\x06CNY\x06COP\x04" +
	"COU\x06CRC\x04CSD\x06CSK\x06CUC\x06CUP\x06CVE\x06CYP\x06CZK" +
	"\x06DDM\x06DEM\x06DJF\x04DKK\x06DOP\x06DZD\x06ECS\x06ECV\x06" +
	"EEK\x06EGP\x06ERN\x06ESA\x06ESB\x06ESP\x04ETB\x06EUR\x06FIM" +
	"\x06FJD\x06FKP\x06FRF\x06GBP\x06GEK\x06GEL\x06GHC\x06GHS\x06" +
	"GIP\x06GMD\x06GNF\x04GNS\x06GQE\x06GRD\x06GTQ\x06GWE\x06GWP" +
	"\x06GYD\x04HKD\x06HNL\x06HRD\x06HRK\x06HTG\x06HUF\x04IDR\x04" +
	"IEP\x06ILP\x06ILR\x06ILS\x06INR\x06IQD\x04IRR\x04ISJ\x06ISK" +
	"\x04ITL\x04JMD\x06JOD\aJPY\x04KES\x06KGS\x06KHR\x06KMF\x04KP" +
	"W\x04KRH\x06KRO\x06KRW\x04KWD\aKYD\x06KZT\x06LAK\x04LBP\x04L" +
	"KR\x06LRD\x06LSL\x06LTL\x06LTT\x06LUC\x06LUF\x04LUL\x06LVL" +
	"\x06LVR\x06LYD\aMAD\x06MAF\x06MCF\x06MDC\x06MDL\x06MGA\x04MG" +
	"F\x04MKD\x06MKN\x06MLF\x06MMK\x04MNT\x04MOP\x06MRO\x04MTL" +
	"\x06MTP\x06MUR\x04MVP\x06MVR\x06MWK\x06MXN\x06MXP\x06MXV\x06" +
	"MYR\x06MZE\x06MZM\x06MZN\x06NAD\x06NGN\x06NIC\x06NIO\x06NLG" +
	"\x06NOK\x06NPR\x06NZD\x06OMR\aPAB\x06PEI\x06PEN\x06PES\x06PG" +
	"K\x06PHP\x06PKR\x04PLN\x06PLZ\x06PTE\x06PYG\x04QAR\x06RHD" +
	"\x06ROL\x06RON\x06RSD\x04RUB\x06RUR\x06RWF\x04SAR\x06SBD\x06" +
	"SCR\x06SDD\x06SDG\x06SDP\x06SEK\x06SGD\x06SHP\x06SIT\x06SKK" +
	"\x06SLL\x04SOS\x04SRD\x06SRG\x06SSP\x06STD\x04SUR\x06SVC\x06" +
	"SYP\x04SZL\x06THB\x06TJR\x06TJS\x06TMM\x04TMT\x06TND\aTOP" +
	"\x06TPE\x06TRL\x04TRY\x06TTD\x06TWD\x06TZS\x04UAH\x06UAK\x06" +
	"UGS\x06UGX\x04USD\x06USN\x06USS\x06UYI\x06UYP\x06UYU\x06UZS" +
	"\x04VEB\x06VEF\x06VND\x04VNN\x06VUV\x04WST\x06XAF\x04XAG\x06" +
	"XAU\x06XBA\x06XBB\x06XBC\x06XBD\x06XCD\x06XDR\x06XEU\x06XFO" +
	"\x06XFU\x06XOF\x04XPD\x06XPF\x04XPT\x06XRE\x06XSU\x06XTS\x06" +
	"XUA\x06XXX\x06YDD\x06YER\x04YUD\x06YUM\x06YUN\x06YUR\x06ZAL" +
	"\x06ZAR\x06ZMK\x04ZMW\x06ZRN\x06ZRZ\x06ZWD\x04ZWL\x06ZWR\x06" +
	"\xff\xff\xff\xff"

type likelyLangRegion struct {
	lang   uint16
	region uint16
}

// likelyScript is a lookup table, indexed by scriptID, for the most likely
// languages and regions given a script.
// Size: 876 bytes, 219 elements
var likelyScript = [219]likelyLangRegion{
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0xd, region: 0x6a},
	{lang: 0x378, region: 0x9a},
	{lang: 0x94, region: 0x27},
	{lang: 0x5, region: 0x9a},
	{lang: 0x17, region: 0x93},
	{lang: 0x19, region: 0x51},
	{lang: 0x0, region: 0x0},
	{lang: 0x1a, region: 0x93},
	{lang: 0x2b, region: 0x34},
	{lang: 0x0, region: 0x0},
	{lang: 0x1b8, region: 0x12c},
	{lang: 0x2b12, region: 0x97},
	{lang: 0x0, region: 0x76},
	{lang: 0x36, region: 0x93},
	{lang: 0x29, region: 0xe5},
	{lang: 0x3b, region: 0x34},
	{lang: 0x48, region: 0x48},
	{lang: 0x3ebd, region: 0x129},
	{lang: 0x45, region: 0x13b},
	{lang: 0x43, region: 0x132},
	{lang: 0x0, region: 0x0},
	{lang: 0x87f, region: 0x6a},
	{lang: 0x1350, region: 0x5c},
	{lang: 0x146, region: 0x104},
	{lang: 0x0, region: 0x0},
	{lang: 0x89, region: 0x97},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0xd00, region: 0x6a},
	{lang: 0x0, region: 0x0},
	{lang: 0xa, region: 0x6e},
	{lang: 0x0, region: 0x0},
	{lang: 0xab, region: 0x7b},
	{lang: 0x4c, region: 0x37},
	{lang: 0x1313, region: 0x12e},
	{lang: 0x0, region: 0x0},
	{lang: 0x60, region: 0x85},
	{lang: 0x82, region: 0x97},
	{lang: 0x131, region: 0x97},
	{lang: 0xc6, region: 0xa9},
	{lang: 0x1b8, region: 0x52},
	{lang: 0x8c, region: 0xe5},
	{lang: 0x1b8, region: 0x52},
	{lang: 0x1b8, region: 0x12c},
	{lang: 0x0, region: 0x0},
	{lang: 0x88, region: 0x95},
	{lang: 0xa5, region: 0xa0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0xe4d, region: 0x9c},
	{lang: 0xa9, region: 0x93},
	{lang: 0xa5, region: 0xa0},
	{lang: 0x0, region: 0x0},
	{lang: 0xd68, region: 0xc2},
	{lang: 0xa5, region: 0xa0},
	{lang: 0x2b12, region: 0xe6},
	{lang: 0xc3, region: 0xa4},
	{lang: 0x0, region: 0x0},
	{lang: 0xc5, region: 0x97},
	{lang: 0xc6, region: 0xa9},
	{lang: 0x0, region: 0x0},
	{lang: 0x22, region: 0x97},
	{lang: 0x123, region: 0x121},
	{lang: 0xe8, region: 0xad},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0xdf, region: 0x97},
	{lang: 0xe3, region: 0x97},
	{lang: 0x0, region: 0x0},
	{lang: 0x1350, region: 0x85},
	{lang: 0xe4, region: 0x52},
	{lang: 0x0, region: 0x0},
	{lang: 0x3f98, region: 0x129},
	{lang: 0x3f99, region: 0x129},
	{lang: 0x0, region: 0x0},
	{lang: 0x23f5, region: 0x9a},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x3fc1, region: 0x109},
	{lang: 0x3fc1, region: 0x109},
	{lang: 0x105, region: 0x97},
	{lang: 0x0, region: 0x0},
	{lang: 0x106, region: 0x52},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x107, region: 0x97},
	{lang: 0x0, region: 0x0},
	{lang: 0x112, region: 0xc2},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0xf5, region: 0x82},
	{lang: 0x0, region: 0x0},
	{lang: 0x31e0, region: 0x94},
	{lang: 0x14e, region: 0x97},
	{lang: 0x28ac, region: 0xc3},
	{lang: 0x12f, region: 0x97},
	{lang: 0x168, region: 0x113},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x2159, region: 0x52},
	{lang: 0x2963, region: 0x9a},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x2a1b, region: 0xae},
	{lang: 0x1573, region: 0x52},
	{lang: 0x400f, region: 0x9a},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x13f, region: 0x93},
	{lang: 0x0, region: 0x0},
	{lang: 0x2589, region: 0x10a},
	{lang: 0x328b, region: 0x95},
	{lang: 0x0, region: 0x0},
	{lang: 0x404c, region: 0x15b},
	{lang: 0x14f, region: 0x97},
	{lang: 0x0, region: 0x0},
	{lang: 0x61, region: 0x79},
	{lang: 0x149, region: 0x97},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x15d, region: 0xb1},
	{lang: 0x32ff, region: 0x97},
	{lang: 0x170, region: 0x93},
	{lang: 0x177, region: 0x34},
	{lang: 0x178, region: 0x11a},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x17a, region: 0xe5},
	{lang: 0x56, region: 0x97},
	{lang: 0x17c, region: 0x52},
	{lang: 0xba, region: 0x52},
	{lang: 0x179, region: 0x97},
	{lang: 0x0, region: 0x0},
	{lang: 0x591, region: 0x13b},
	{lang: 0x17d, region: 0x97},
	{lang: 0x0, region: 0x0},
	{lang: 0x15b, region: 0x126},
	{lang: 0x6b, region: 0xe5},
	{lang: 0x59, region: 0xcb},
	{lang: 0x182, region: 0x121},
	{lang: 0x2c, region: 0x52},
	{lang: 0x0, region: 0x0},
	{lang: 0x3728, region: 0x11a},
	{lang: 0x1a4, region: 0xb2},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x29ce, region: 0x9a},
	{lang: 0x2ca, region: 0x99},
	{lang: 0x9b, region: 0x52},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
	{lang: 0x0, region: 0x0},
}

type likelyScriptRegion struct {
	region uint16
	script uint8
	flags  uint8
}

// likelyLang is a lookup table, indexed by langID, for the most likely
// scripts and regions given incomplete information. If more entries exist for a
// given language, region and script are the index and size respectively
// of the list in likelyLangList.
// Size: 1776 bytes, 444 elements
var likelyLang = [444]likelyScriptRegion{
	{region: 0x132, script: 0x4b, flags: 0x0},
	{region: 0x6e, script: 0x4b, flags: 0x0},
	{region: 0x7b, script: 0x1b, flags: 0x0},
	{region: 0x93, script: 0x4b, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0x15e, script: 0x4b, flags: 0x0},
	{region: 0x51, script: 0x4b, flags: 0x0},
	{region: 0x7e, script: 0x4b, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0x6e, script: 0x24, flags: 0x0},
	{region: 0xd4, script: 0x4b, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0x6a, script: 0x4, flags: 0x0},
	{region: 0x97, script: 0xc, flags: 0x0},
	{region: 0x12d, script: 0x4b, flags: 0x0},
	{region: 0x6d, script: 0x4b, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0x3e, script: 0x4b, flags: 0x0},
	{region: 0x0, script: 0x3, flags: 0x1},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0xe6, script: 0x4, flags: 0x0},
	{region: 0x93, script: 0x4b, flags: 0x0},
	{region: 0x51, script: 0x4b, flags: 0x0},
	{region: 0x51, script: 0x9, flags: 0x0},
	{region: 0x93, script: 0x4b, flags: 0x0},
	{region: 0x46, script: 0x1b, flags: 0x0},
	{region: 0x15f, script: 0x4b, flags: 0x0},
	{region: 0x12d, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0xc1, flags: 0x0},
	{region: 0xe6, script: 0x4, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0x37, script: 0x1b, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0x13c, script: 0x4b, flags: 0x0},
	{region: 0xe5, script: 0x4b, flags: 0x0},
	{region: 0xd4, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0xe5, script: 0x4b, flags: 0x0},
	{region: 0xc1, script: 0x4b, flags: 0x0},
	{region: 0x34, script: 0xc, flags: 0x0},
	{region: 0x52, script: 0xca, flags: 0x0},
	{region: 0x4e, script: 0x4b, flags: 0x0},
	{region: 0x76, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0x32, script: 0x4b, flags: 0x0},
	{region: 0x51, script: 0x4b, flags: 0x0},
	{region: 0xe6, script: 0x1d, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0x15c, script: 0x4b, flags: 0x0},
	{region: 0x93, script: 0x4b, flags: 0x0},
	{region: 0x93, script: 0x4b, flags: 0x0},
	{region: 0x6c, script: 0x24, flags: 0x0},
	{region: 0x6d, script: 0x4b, flags: 0x0},
	{region: 0xd4, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0xc, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0xe5, script: 0x4b, flags: 0x0},
	{region: 0x12f, script: 0x4b, flags: 0x0},
	{region: 0x88, script: 0x4b, flags: 0x0},
	{region: 0x73, script: 0x4b, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0x48, script: 0x4b, flags: 0x0},
	{region: 0x132, script: 0x17, flags: 0x0},
	{region: 0xa4, script: 0x4, flags: 0x0},
	{region: 0x13b, script: 0x16, flags: 0x0},
	{region: 0x99, script: 0x4, flags: 0x0},
	{region: 0x76, script: 0x4b, flags: 0x0},
	{region: 0x48, script: 0x14, flags: 0x0},
	{region: 0x48, script: 0x14, flags: 0x0},
	{region: 0x5d, script: 0x4b, flags: 0x0},
	{region: 0xe7, script: 0x4b, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0x79, script: 0x4b, flags: 0x0},
	{region: 0x62, script: 0x4b, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0xa2, script: 0x4b, flags: 0x0},
	{region: 0x5f, script: 0x4b, flags: 0x0},
	{region: 0x48, script: 0x4b, flags: 0x0},
	{region: 0x48, script: 0x4b, flags: 0x0},
	{region: 0xd2, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0x4, flags: 0x0},
	{region: 0x5f, script: 0x4b, flags: 0x0},
	{region: 0x51, script: 0x4b, flags: 0x0},
	{region: 0xcb, script: 0xc8, flags: 0x0},
	{region: 0x112, script: 0x4b, flags: 0x0},
	{region: 0x36, script: 0x4b, flags: 0x0},
	{region: 0x42, script: 0xca, flags: 0x0},
	{region: 0xa2, script: 0x4b, flags: 0x0},
	{region: 0x7e, script: 0x4b, flags: 0x0},
	{region: 0xd4, script: 0x4b, flags: 0x0},
	{region: 0x85, script: 0x2a, flags: 0x0},
	{region: 0x132, script: 0x4b, flags: 0x0},
	{region: 0x3, script: 0x2, flags: 0x1},
	{region: 0x6d, script: 0x4b, flags: 0x0},
	{region: 0x69, script: 0x4b, flags: 0x0},
	{region: 0x6d, script: 0x4b, flags: 0x0},
	{region: 0x51, script: 0x4b, flags: 0x0},
	{region: 0x9a, script: 0x4, flags: 0x0},
	{region: 0x84, script: 0x4b, flags: 0x0},
	{region: 0x112, script: 0x4b, flags: 0x0},
	{region: 0x70, script: 0x4b, flags: 0x0},
	{region: 0xe5, script: 0x4b, flags: 0x0},
	{region: 0x71, script: 0x4b, flags: 0x0},
	{region: 0x74, script: 0x4b, flags: 0x0},
	{region: 0x3a, script: 0x4b, flags: 0x0},
	{region: 0x76, script: 0x4b, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0x9c, script: 0x4b, flags: 0x0},
	{region: 0xd7, script: 0x4b, flags: 0x0},
	{region: 0x94, script: 0x4b, flags: 0x0},
	{region: 0x7e, script: 0x4b, flags: 0x0},
	{region: 0xba, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0x7c, script: 0x4b, flags: 0x0},
	{region: 0x79, script: 0x4b, flags: 0x0},
	{region: 0x6e, script: 0x24, flags: 0x0},
	{region: 0xa5, script: 0x4b, flags: 0x0},
	{region: 0x6d, script: 0x4b, flags: 0x0},
	{region: 0xef, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0x93, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0xc, flags: 0x0},
	{region: 0x4d, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0x2b, flags: 0x0},
	{region: 0xa2, script: 0x4b, flags: 0x0},
	{region: 0x5, script: 0x2, flags: 0x1},
	{region: 0x48, script: 0x4b, flags: 0x0},
	{region: 0x7, script: 0x3, flags: 0x1},
	{region: 0x132, script: 0x4b, flags: 0x0},
	{region: 0x95, script: 0x33, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0xe5, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0xe5, script: 0x4b, flags: 0x0},
	{region: 0xe4, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0x8e, script: 0x4b, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0x8f, script: 0x4b, flags: 0x0},
	{region: 0x90, script: 0x4b, flags: 0x0},
	{region: 0x27, script: 0x6, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0xa, script: 0x2, flags: 0x1},
	{region: 0xd4, script: 0x4b, flags: 0x0},
	{region: 0x93, script: 0x4b, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0xd4, script: 0x4b, flags: 0x0},
	{region: 0x52, script: 0xd3, flags: 0x0},
	{region: 0x132, script: 0x4b, flags: 0x0},
	{region: 0xe5, script: 0x4b, flags: 0x0},
	{region: 0x93, script: 0x4b, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0x9b, script: 0x4b, flags: 0x0},
	{region: 0x9c, script: 0x4b, flags: 0x0},
	{region: 0x48, script: 0x14, flags: 0x0},
	{region: 0x95, script: 0x33, flags: 0x0},
	{region: 0xa0, script: 0x3c, flags: 0x0},
	{region: 0x51, script: 0x4b, flags: 0x0},
	{region: 0x12e, script: 0x33, flags: 0x0},
	{region: 0x12d, script: 0x4b, flags: 0x0},
	{region: 0x93, script: 0x4b, flags: 0x0},
	{region: 0x93, script: 0x4b, flags: 0x0},
	{region: 0x7b, script: 0x26, flags: 0x0},
	{region: 0x134, script: 0x1b, flags: 0x0},
	{region: 0x66, script: 0x4b, flags: 0x0},
	{region: 0xd4, script: 0x4b, flags: 0x0},
	{region: 0xa2, script: 0x4b, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0xd4, script: 0x4b, flags: 0x0},
	{region: 0x12d, script: 0x4b, flags: 0x0},
	{region: 0x121, script: 0xc9, flags: 0x0},
	{region: 0x59, script: 0x4b, flags: 0x0},
	{region: 0x51, script: 0x4b, flags: 0x0},
	{region: 0x4e, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0x4a, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0x4b, flags: 0x0},
	{region: 0x52, script: 0xc0, flags: 0x0},
	{region: 0xc1, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0x62, flags: 0x0},
	{region: 0xa2, script: 0x4b, flags: 0x0},
	{region: 0xd0, script: 0x4b, flags: 0x0},
	{region: 0xc, script: 0x6, flags: 0x1},
	{region: 0x51, script: 0x4b, flags: 0x0},
	{region: 0x80, script: 0x4b, flags: 0x0},
	{region: 0xa2, script: 0x4b, flags: 0x0},
	{region: 0xa4, script: 0x41, flags: 0x0},
	{region: 0x29, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0x43, flags: 0x0},
	{region: 0xa9, script: 0x44, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0x73, script: 0x4b, flags: 0x0},
	{region: 0xb2, script: 0x4b, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0x110, script: 0x4b, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0x97, script: 0x4, flags: 0x0},
	{region: 0x12d, script: 0x4b, flags: 0x0},
	{region: 0x51, script: 0x4b, flags: 0x0},
	{region: 0x5f, script: 0x4b, flags: 0x0},
	{region: 0x12, script: 0x9, flags: 0x1},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0x79, script: 0x4b, flags: 0x0},
	{region: 0x1b, script: 0x5, flags: 0x1},
	{region: 0x135, script: 0x4b, flags: 0x0},
	{region: 0x12d, script: 0x4b, flags: 0x0},
	{region: 0xe6, script: 0x4, flags: 0x0},
	{region: 0xb5, script: 0x4b, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0x52, script: 0xc9, flags: 0x0},
	{region: 0x97, script: 0x4c, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0x12f, script: 0x4b, flags: 0x0},
	{region: 0xd7, script: 0x4b, flags: 0x0},
	{region: 0xd9, script: 0x1d, flags: 0x0},
	{region: 0x52, script: 0x50, flags: 0x0},
	{region: 0x9a, script: 0x4, flags: 0x0},
	{region: 0x97, script: 0xc4, flags: 0x0},
	{region: 0x4a, script: 0x4b, flags: 0x0},
	{region: 0xad, script: 0x48, flags: 0x0},
	{region: 0x4a, script: 0x4b, flags: 0x0},
	{region: 0xb4, script: 0x4b, flags: 0x0},
	{region: 0x4a, script: 0x4b, flags: 0x0},
	{region: 0x4a, script: 0x4b, flags: 0x0},
	{region: 0xa2, script: 0x4b, flags: 0x0},
	{region: 0xa2, script: 0x4b, flags: 0x0},
	{region: 0xb6, script: 0x4b, flags: 0x0},
	{region: 0x121, script: 0xc9, flags: 0x0},
	{region: 0x93, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0x93, script: 0x4b, flags: 0x0},
	{region: 0x82, script: 0x4b, flags: 0x0},
	{region: 0xa2, script: 0x4b, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0xe5, script: 0x4b, flags: 0x0},
	{region: 0x93, script: 0x4b, flags: 0x0},
	{region: 0x110, script: 0x4b, flags: 0x0},
	{region: 0xa2, script: 0x4b, flags: 0x0},
	{region: 0xca, script: 0x4b, flags: 0x0},
	{region: 0xbd, script: 0x4b, flags: 0x0},
	{region: 0xcf, script: 0x4b, flags: 0x0},
	{region: 0x51, script: 0x4b, flags: 0x0},
	{region: 0xbe, script: 0x4b, flags: 0x0},
	{region: 0xde, script: 0x4b, flags: 0x0},
	{region: 0x93, script: 0x4b, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0xc0, script: 0x1b, flags: 0x0},
	{region: 0x97, script: 0x5b, flags: 0x0},
	{region: 0x20, script: 0x3, flags: 0x1},
	{region: 0x97, script: 0xc, flags: 0x0},
	{region: 0x81, script: 0x4b, flags: 0x0},
	{region: 0xc2, script: 0x62, flags: 0x0},
	{region: 0x102, script: 0x4b, flags: 0x0},
	{region: 0x36, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0x23, script: 0x4, flags: 0x1},
	{region: 0xc9, script: 0x4b, flags: 0x0},
	{region: 0x51, script: 0x4b, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0xc2, script: 0x62, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0xdb, script: 0x4b, flags: 0x0},
	{region: 0x9c, script: 0x4b, flags: 0x0},
	{region: 0xd0, script: 0x4b, flags: 0x0},
	{region: 0xd8, script: 0x4b, flags: 0x0},
	{region: 0x161, script: 0x4b, flags: 0x0},
	{region: 0x5f, script: 0x4b, flags: 0x0},
	{region: 0xd9, script: 0x1d, flags: 0x0},
	{region: 0xd9, script: 0x1d, flags: 0x0},
	{region: 0xd0, script: 0x4b, flags: 0x0},
	{region: 0xdd, script: 0x4b, flags: 0x0},
	{region: 0xd7, script: 0x4b, flags: 0x0},
	{region: 0x51, script: 0x4b, flags: 0x0},
	{region: 0xd8, script: 0x4b, flags: 0x0},
	{region: 0x51, script: 0x4b, flags: 0x0},
	{region: 0xd8, script: 0x4b, flags: 0x0},
	{region: 0x121, script: 0x47, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0x15e, script: 0x4b, flags: 0x0},
	{region: 0x15e, script: 0x4b, flags: 0x0},
	{region: 0x109, script: 0x4b, flags: 0x0},
	{region: 0x132, script: 0x4b, flags: 0x0},
	{region: 0xcc, script: 0x4b, flags: 0x0},
	{region: 0x12d, script: 0x4b, flags: 0x0},
	{region: 0x12f, script: 0x4b, flags: 0x0},
	{region: 0x76, script: 0x4b, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0x6e, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0x6b, flags: 0x0},
	{region: 0x7b, script: 0x1b, flags: 0x0},
	{region: 0x27, script: 0x3, flags: 0x1},
	{region: 0xe5, script: 0x4b, flags: 0x0},
	{region: 0xe5, script: 0x4b, flags: 0x0},
	{region: 0x2a, script: 0x2, flags: 0x1},
	{region: 0xee, script: 0x4b, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0xe7, script: 0x4b, flags: 0x0},
	{region: 0x73, script: 0x4b, flags: 0x0},
	{region: 0x9a, script: 0x4, flags: 0x0},
	{region: 0x23, script: 0x4, flags: 0x0},
	{region: 0x40, script: 0x4b, flags: 0x0},
	{region: 0xe2, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0x4b, flags: 0x0},
	{region: 0x100, script: 0x4b, flags: 0x0},
	{region: 0x93, script: 0x4b, flags: 0x0},
	{region: 0xd9, script: 0x1d, flags: 0x0},
	{region: 0x97, script: 0xc, flags: 0x0},
	{region: 0x4d, script: 0x4b, flags: 0x0},
	{region: 0x39, script: 0x4b, flags: 0x0},
	{region: 0x102, script: 0x4b, flags: 0x0},
	{region: 0x12d, script: 0x4b, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0x105, script: 0x4b, flags: 0x0},
	{region: 0x12d, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x0},
	{region: 0x7e, script: 0x4b, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0xa2, script: 0x4b, flags: 0x0},
	{region: 0x93, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0xaf, flags: 0x0},
	{region: 0x12d, script: 0x4b, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0x9c, script: 0x4b, flags: 0x0},
	{region: 0x79, script: 0x4b, flags: 0x0},
	{region: 0x2c, script: 0x2, flags: 0x1},
	{region: 0x9a, script: 0x4, flags: 0x0},
	{region: 0xd8, script: 0x4b, flags: 0x0},
	{region: 0xcf, script: 0x4b, flags: 0x0},
	{region: 0xc1, script: 0x4b, flags: 0x0},
	{region: 0x4b, script: 0x4b, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0x2e, script: 0x2, flags: 0x1},
	{region: 0xc2, script: 0x62, flags: 0x0},
	{region: 0xb1, script: 0xb5, flags: 0x0},
	{region: 0x6e, script: 0x4b, flags: 0x0},
	{region: 0x10f, script: 0x4b, flags: 0x0},
	{region: 0x10d, script: 0x4b, flags: 0x0},
	{region: 0x13f, script: 0x4b, flags: 0x0},
	{region: 0x10a, script: 0x4b, flags: 0x0},
	{region: 0x10a, script: 0x4b, flags: 0x0},
	{region: 0x70, script: 0x4b, flags: 0x0},
	{region: 0x70, script: 0x4b, flags: 0x0},
	{region: 0x161, script: 0x4b, flags: 0x0},
	{region: 0xc1, script: 0x4b, flags: 0x0},
	{region: 0x113, script: 0x4b, flags: 0x0},
	{region: 0x26, script: 0x4b, flags: 0x0},
	{region: 0x30, script: 0x5, flags: 0x1},
	{region: 0x114, script: 0x4b, flags: 0x0},
	{region: 0x112, script: 0x4b, flags: 0x0},
	{region: 0x15e, script: 0x4b, flags: 0x0},
	{region: 0x6c, script: 0x4b, flags: 0x0},
	{region: 0x15e, script: 0x4b, flags: 0x0},
	{region: 0x93, script: 0x4b, flags: 0x0},
	{region: 0x12d, script: 0x4b, flags: 0x0},
	{region: 0x82, script: 0x4b, flags: 0x0},
	{region: 0x10a, script: 0x4b, flags: 0x0},
	{region: 0x12d, script: 0x4b, flags: 0x0},
	{region: 0x15c, script: 0x4, flags: 0x0},
	{region: 0x4a, script: 0x4b, flags: 0x0},
	{region: 0x34, script: 0xc, flags: 0x0},
	{region: 0x11a, script: 0xb9, flags: 0x0},
	{region: 0x97, script: 0xc1, flags: 0x0},
	{region: 0xe5, script: 0x4b, flags: 0x0},
	{region: 0x97, script: 0x43, flags: 0x0},
	{region: 0x52, script: 0xbf, flags: 0x0},
	{region: 0x97, script: 0xc4, flags: 0x0},
	{region: 0x110, script: 0x4b, flags: 0x0},
	{region: 0x12f, script: 0x4b, flags: 0x0},
	{region: 0x124, script: 0x4b, flags: 0x0},
	{region: 0x35, script: 0x3, flags: 0x1},
	{region: 0x121, script: 0xc9, flags: 0x0},
	{region: 0x6e, script: 0x24, flags: 0x0},
	{region: 0x6c, script: 0x24, flags: 0x0},
	{region: 0xd4, script: 0x4b, flags: 0x0},
	{region: 0x125, script: 0x4b, flags: 0x0},
	{region: 0x123, script: 0x4b, flags: 0x0},
	{region: 0xe5, script: 0x4b, flags: 0x0},
	{region: 0xd2, script: 0x4b, flags: 0x0},
	{region: 0x15e, script: 0x4b, flags: 0x0},
	{region: 0x127, script: 0x4b, flags: 0x0},
	{region: 0xe4, script: 0x4b, flags: 0x0},
	{region: 0x129, script: 0x4b, flags: 0x0},
	{region: 0x12c, script: 0x4b, flags: 0x0},
	{region: 0x15e, script: 0x4b, flags: 0x0},
	{region: 0xe5, script: 0x4b, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0x121, script: 0xc9, flags: 0x0},
	{region: 0xcc, script: 0x4b, flags: 0x0},
	{region: 0x12b, script: 0x4b, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0xd2, script: 0x4b, flags: 0x0},
	{region: 0xe3, script: 0x4b, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0xb8, script: 0x4b, flags: 0x0},
	{region: 0x104, script: 0x1b, flags: 0x0},
	{region: 0x38, script: 0x4, flags: 0x1},
	{region: 0x12e, script: 0x1b, flags: 0x0},
	{region: 0x73, script: 0x4b, flags: 0x0},
	{region: 0x29, script: 0x4b, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0x97, script: 0xc, flags: 0x0},
	{region: 0x97, script: 0xc, flags: 0x0},
	{region: 0xe6, script: 0x4, flags: 0x0},
	{region: 0x3c, script: 0x5, flags: 0x1},
	{region: 0xb2, script: 0xcd, flags: 0x0},
	{region: 0x15e, script: 0x4b, flags: 0x0},
	{region: 0x13b, script: 0x4b, flags: 0x0},
	{region: 0x1, script: 0x4b, flags: 0x0},
	{region: 0x12d, script: 0x4b, flags: 0x0},
	{region: 0x35, script: 0x4b, flags: 0x0},
	{region: 0x4d, script: 0x4b, flags: 0x0},
	{region: 0x6e, script: 0x24, flags: 0x0},
	{region: 0xe5, script: 0x4b, flags: 0x0},
	{region: 0x112, script: 0x4b, flags: 0x0},
	{region: 0x15e, script: 0x4b, flags: 0x0},
	{region: 0x12f, script: 0x4b, flags: 0x0},
	{region: 0xd9, script: 0x1d, flags: 0x0},
	{region: 0xcf, script: 0x4b, flags: 0x0},
	{region: 0x73, script: 0x4b, flags: 0x0},
	{region: 0x51, script: 0x4b, flags: 0x0},
	{region: 0x41, script: 0x2, flags: 0x1},
	{region: 0xd4, script: 0x4b, flags: 0x0},
	{region: 0x52, script: 0x4b, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0x43, script: 0x13, flags: 0x1},
	{region: 0x15e, script: 0x4b, flags: 0x0},
	{region: 0x0, script: 0x0, flags: 0x0},
	{region: 0x129, script: 0x4, flags: 0x0},
}

// likelyLangList holds lists info associated with likelyLang.
// Size: 344 bytes, 86 elements
var likelyLangList = [86]likelyScriptRegion{
	{region: 0x31, script: 0x4b, flags: 0x0},
	{region: 0x9a, script: 0x4, flags: 0x4},
	{region: 0x9a, script: 0x4, flags: 0x2},
	{region: 0x1, script: 0x4b, flags: 0x0},
	{region: 0x111, script: 0x4b, flags: 0x2},
	{region: 0x79, script: 0x4b, flags: 0x0},
	{region: 0x96, script: 0x4b, flags: 0x2},
	{region: 0xd4, script: 0x4b, flags: 0x0},
	{region: 0x51, script: 0x4, flags: 0x4},
	{region: 0x109, script: 0x4, flags: 0x4},
	{region: 0x76, script: 0x4b, flags: 0x0},
	{region: 0x10a, script: 0x4b, flags: 0x2},
	{region: 0xac, script: 0x1b, flags: 0x0},
	{region: 0x23, script: 0x4, flags: 0x4},
	{region: 0x52, script: 0x4, flags: 0x4},
	{region: 0x9a, script: 0x4, flags: 0x4},
	{region: 0xc3, script: 0x4, flags: 0x4},
	{region: 0x52, script: 0x4, flags: 0x2},
	{region: 0x129, script: 0x4b, flags: 0x0},
	{region: 0x27, script: 0x4, flags: 0x4},
	{region: 0x31, script: 0x4, flags: 0x4},
	{region: 0x5f, script: 0x4, flags: 0x4},
	{region: 0x7b, script: 0x4, flags: 0x4},
	{region: 0x99, script: 0x4, flags: 0x4},
	{region: 0xae, script: 0x4, flags: 0x4},
	{region: 0x125, script: 0x4, flags: 0x4},
	{region: 0x99, script: 0x4, flags: 0x2},
	{region: 0xa3, script: 0x1b, flags: 0x0},
	{region: 0x52, script: 0x4, flags: 0x4},
	{region: 0x129, script: 0x4b, flags: 0x4},
	{region: 0x52, script: 0x4, flags: 0x2},
	{region: 0x129, script: 0x4b, flags: 0x2},
	{region: 0xc3, script: 0x1b, flags: 0x0},
	{region: 0x52, script: 0x5d, flags: 0x4},
	{region: 0x52, script: 0x5d, flags: 0x2},
	{region: 0xce, script: 0x4b, flags: 0x0},
	{region: 0x49, script: 0x4, flags: 0x4},
	{region: 0x93, script: 0x4, flags: 0x4},
	{region: 0x93, script: 0x4, flags: 0x2},
	{region: 0x97, script: 0x2c, flags: 0x0},
	{region: 0xe6, script: 0x4, flags: 0x4},
	{region: 0xe6, script: 0x4, flags: 0x2},
	{region: 0x3f, script: 0x4b, flags: 0x0},
	{region: 0x5a, script: 0x4b, flags: 0x2},
	{region: 0x97, script: 0x4, flags: 0x0},
	{region: 0x97, script: 0x1d, flags: 0x2},
	{region: 0xb8, script: 0xc6, flags: 0x0},
	{region: 0xb8, script: 0x4b, flags: 0x4},
	{region: 0x103, script: 0x1b, flags: 0x0},
	{region: 0xbb, script: 0x4b, flags: 0x4},
	{region: 0x102, script: 0x4b, flags: 0x4},
	{region: 0x104, script: 0x4b, flags: 0x4},
	{region: 0x129, script: 0x4b, flags: 0x4},
	{region: 0x122, script: 0x1b, flags: 0x0},
	{region: 0xe6, script: 0x4, flags: 0x4},
	{region: 0xe6, script: 0x4, flags: 0x2},
	{region: 0x52, script: 0x4, flags: 0x0},
	{region: 0xac, script: 0x1b, flags: 0x4},
	{region: 0xc3, script: 0x1b, flags: 0x4},
	{region: 0xac, script: 0x1b, flags: 0x2},
	{region: 0x134, script: 0x1b, flags: 0x0},
	{region: 0x23, script: 0x4, flags: 0x4},
	{region: 0x125, script: 0x4b, flags: 0x4},
	{region: 0x129, script: 0x4b, flags: 0x4},
	{region: 0x23, script: 0x4, flags: 0x2},
	{region: 0x95, script: 0x33, flags: 0x0},
	{region: 0x12e, script: 0x33, flags: 0x2},
	{region: 0x52, script: 0x30, flags: 0x0},
	{region: 0x2e, script: 0x31, flags: 0x4},
	{region: 0x3d, script: 0x31, flags: 0x4},
	{region: 0x79, script: 0x31, flags: 0x4},
	{region: 0x7c, script: 0x31, flags: 0x4},
	{region: 0x8b, script: 0x31, flags: 0x4},
	{region: 0x93, script: 0x31, flags: 0x4},
	{region: 0xc4, script: 0x31, flags: 0x4},
	{region: 0xce, script: 0x31, flags: 0x4},
	{region: 0xe0, script: 0x31, flags: 0x4},
	{region: 0xe3, script: 0x31, flags: 0x4},
	{region: 0xe5, script: 0x31, flags: 0x4},
	{region: 0x114, script: 0x31, flags: 0x4},
	{region: 0x121, script: 0x31, flags: 0x4},
	{region: 0x12c, script: 0x31, flags: 0x4},
	{region: 0x132, script: 0x31, flags: 0x4},
	{region: 0x13b, script: 0x31, flags: 0x4},
	{region: 0x52, script: 0x30, flags: 0x2},
	{region: 0x12c, script: 0x31, flags: 0x2},
}

type likelyLangScript struct {
	lang   uint16
	script uint8
	flags  uint8
}

// likelyRegion is a lookup table, indexed by regionID, for the most likely
// languages and scripts given incomplete information. If more entries exist
// for a given regionID, lang and script are the index and size respectively
// of the list in likelyRegionList.
// TODO: exclude containers and user-definable regions from the list.
// Size: 1420 bytes, 355 elements
var likelyRegion = [355]likelyLangScript{
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x39, script: 0x4b, flags: 0x0},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0x0, script: 0x2, flags: 0x1},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x2, script: 0x2, flags: 0x1},
	{lang: 0x4, script: 0x3, flags: 0x1},
	{lang: 0x134, script: 0x4b, flags: 0x0},
	{lang: 0x13b, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x4b, flags: 0x0},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x161, script: 0x4b, flags: 0x0},
	{lang: 0x52, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x11e, script: 0x4b, flags: 0x0},
	{lang: 0x173, script: 0x4b, flags: 0x0},
	{lang: 0x7, script: 0x2, flags: 0x1},
	{lang: 0x9, script: 0x2, flags: 0x1},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x2b, script: 0xc, flags: 0x0},
	{lang: 0x11e, script: 0x4b, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0xb, script: 0x2, flags: 0x1},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0x143, script: 0x4b, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x10d, script: 0x4b, flags: 0x0},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x134, script: 0x4b, flags: 0x0},
	{lang: 0x13b, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0xd, script: 0x2, flags: 0x1},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x1b, script: 0x1b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x10d, script: 0x4, flags: 0x2},
	{lang: 0x174, script: 0x4b, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x52, script: 0x4b, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0xf, script: 0x4, flags: 0x1},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x13b, script: 0x4b, flags: 0x0},
	{lang: 0x134, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x13, script: 0x2, flags: 0x1},
	{lang: 0x4a, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x15, script: 0x2, flags: 0x1},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x1, script: 0x4b, flags: 0x0},
	{lang: 0x4f, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x17, script: 0x2, flags: 0x1},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x64, script: 0x4b, flags: 0x0},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0x19, script: 0x2, flags: 0x1},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x1b, script: 0x2, flags: 0x1},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x6a, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x40, script: 0x4b, flags: 0x0},
	{lang: 0x6d, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0xd0, script: 0x4, flags: 0x2},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x1d, script: 0x4, flags: 0x1},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x8, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0xc1, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x21, script: 0x3, flags: 0x1},
	{lang: 0x0, script: 0x4b, flags: 0x0},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x13b, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x1b8, script: 0x31, flags: 0x0},
	{lang: 0x0, script: 0x4b, flags: 0x0},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x90, script: 0x4b, flags: 0x0},
	{lang: 0x92, script: 0x4b, flags: 0x0},
	{lang: 0x93, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x24, script: 0x2, flags: 0x1},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x26, script: 0x2, flags: 0x1},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x28, script: 0x3, flags: 0x1},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0x2b, script: 0x2, flags: 0x1},
	{lang: 0xa1, script: 0x4b, flags: 0x0},
	{lang: 0xa2, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0xa5, script: 0x3c, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0xd8, script: 0x1b, flags: 0x0},
	{lang: 0x2d, script: 0x3, flags: 0x1},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x30, script: 0x2, flags: 0x1},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0xc6, script: 0x44, flags: 0x0},
	{lang: 0xc6, script: 0x44, flags: 0x0},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x32, script: 0x2, flags: 0x1},
	{lang: 0x34, script: 0x2, flags: 0x1},
	{lang: 0x36, script: 0x2, flags: 0x1},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x52, script: 0x4b, flags: 0x0},
	{lang: 0x15d, script: 0xb5, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x16f, script: 0x4b, flags: 0x0},
	{lang: 0xea, script: 0x4b, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0xef, script: 0x4b, flags: 0x0},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0x38, script: 0x2, flags: 0x1},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x3a, script: 0x2, flags: 0x1},
	{lang: 0x16a, script: 0x4b, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0xfd, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x3c, script: 0x2, flags: 0x1},
	{lang: 0x2a, script: 0x4b, flags: 0x0},
	{lang: 0x112, script: 0x62, flags: 0x0},
	{lang: 0x3e, script: 0x2, flags: 0x1},
	{lang: 0x40, script: 0x2, flags: 0x1},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x42, script: 0x2, flags: 0x1},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x10e, script: 0x4b, flags: 0x0},
	{lang: 0x44, script: 0x3, flags: 0x1},
	{lang: 0x59, script: 0xc8, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x10d, script: 0x4b, flags: 0x0},
	{lang: 0x13b, script: 0x4b, flags: 0x0},
	{lang: 0xbe, script: 0x4b, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x86, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x86, script: 0x4, flags: 0x2},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x11e, script: 0x4b, flags: 0x0},
	{lang: 0x117, script: 0x4b, flags: 0x0},
	{lang: 0x11a, script: 0x1d, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x18c, script: 0x4b, flags: 0x0},
	{lang: 0x6b, script: 0x4b, flags: 0x0},
	{lang: 0x47, script: 0x3, flags: 0x1},
	{lang: 0x4a, script: 0x2, flags: 0x1},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0x13b, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x135, script: 0x4b, flags: 0x0},
	{lang: 0x7d, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x4c, script: 0x2, flags: 0x1},
	{lang: 0x16a, script: 0x1b, flags: 0x0},
	{lang: 0x4e, script: 0x2, flags: 0x1},
	{lang: 0x147, script: 0x4b, flags: 0x0},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0x173, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x160, script: 0x4b, flags: 0x0},
	{lang: 0x117, script: 0x4b, flags: 0x0},
	{lang: 0x50, script: 0x2, flags: 0x1},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0xa2, script: 0x4b, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x52, script: 0x2, flags: 0x1},
	{lang: 0x11e, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x13b, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x54, script: 0x2, flags: 0x1},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x56, script: 0x2, flags: 0x1},
	{lang: 0x58, script: 0x2, flags: 0x1},
	{lang: 0x187, script: 0x4b, flags: 0x0},
	{lang: 0x13b, script: 0x4b, flags: 0x0},
	{lang: 0x5a, script: 0x2, flags: 0x1},
	{lang: 0x5c, script: 0x2, flags: 0x1},
	{lang: 0x18b, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x5e, script: 0x3, flags: 0x1},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x194, script: 0x4b, flags: 0x0},
	{lang: 0x61, script: 0x2, flags: 0x1},
	{lang: 0x174, script: 0x4b, flags: 0x0},
	{lang: 0x63, script: 0x3, flags: 0x1},
	{lang: 0x174, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x1a3, script: 0x1b, flags: 0x0},
	{lang: 0xd9, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x63, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x1a6, script: 0x4b, flags: 0x0},
	{lang: 0x25, script: 0x4b, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x161, script: 0x4b, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0x66, script: 0x2, flags: 0x1},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
	{lang: 0x0, script: 0x0, flags: 0x0},
}

// likelyRegionList holds lists info associated with likelyRegion.
// Size: 416 bytes, 104 elements
var likelyRegionList = [104]likelyLangScript{
	{lang: 0x67, script: 0x4, flags: 0x0},
	{lang: 0x186, script: 0x4b, flags: 0x0},
	{lang: 0x169, script: 0x4b, flags: 0x0},
	{lang: 0x104, script: 0x1b, flags: 0x0},
	{lang: 0x94, script: 0x6, flags: 0x0},
	{lang: 0xd4, script: 0x4, flags: 0x0},
	{lang: 0x14, script: 0x4b, flags: 0x0},
	{lang: 0x14, script: 0x4b, flags: 0x0},
	{lang: 0xd4, script: 0x4, flags: 0x0},
	{lang: 0x31, script: 0x4b, flags: 0x0},
	{lang: 0x16a, script: 0x1b, flags: 0x0},
	{lang: 0x21, script: 0x1b, flags: 0x0},
	{lang: 0x18d, script: 0x4b, flags: 0x0},
	{lang: 0x5c, script: 0xca, flags: 0x0},
	{lang: 0x11a, script: 0x1d, flags: 0x0},
	{lang: 0x1b8, script: 0x30, flags: 0x0},
	{lang: 0x19b, script: 0x4, flags: 0x0},
	{lang: 0x1b6, script: 0x4b, flags: 0x0},
	{lang: 0xde, script: 0xc9, flags: 0x0},
	{lang: 0x60, script: 0x2a, flags: 0x0},
	{lang: 0x18d, script: 0x4b, flags: 0x0},
	{lang: 0x52, script: 0x4b, flags: 0x0},
	{lang: 0xd4, script: 0x4, flags: 0x0},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x183, script: 0x24, flags: 0x0},
	{lang: 0x1, script: 0x4b, flags: 0x0},
	{lang: 0xa, script: 0x24, flags: 0x0},
	{lang: 0x61, script: 0x4b, flags: 0x0},
	{lang: 0xab, script: 0x26, flags: 0x0},
	{lang: 0xd4, script: 0x4, flags: 0x0},
	{lang: 0x2, script: 0x1b, flags: 0x0},
	{lang: 0xd4, script: 0x4b, flags: 0x0},
	{lang: 0x60, script: 0x2a, flags: 0x0},
	{lang: 0x104, script: 0x1b, flags: 0x0},
	{lang: 0x18d, script: 0x4b, flags: 0x0},
	{lang: 0x98, script: 0x4b, flags: 0x0},
	{lang: 0x10d, script: 0x4, flags: 0x0},
	{lang: 0x88, script: 0x33, flags: 0x0},
	{lang: 0x144, script: 0x4b, flags: 0x0},
	{lang: 0x89, script: 0x1d, flags: 0x0},
	{lang: 0x1a2, script: 0x4, flags: 0x0},
	{lang: 0xbc, script: 0x62, flags: 0x0},
	{lang: 0x67, script: 0x4, flags: 0x0},
	{lang: 0x186, script: 0x4b, flags: 0x0},
	{lang: 0xc3, script: 0x41, flags: 0x0},
	{lang: 0x44, script: 0x4, flags: 0x0},
	{lang: 0xb3, script: 0xc9, flags: 0x0},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x146, script: 0x1b, flags: 0x0},
	{lang: 0x52, script: 0x4b, flags: 0x0},
	{lang: 0xe8, script: 0x48, flags: 0x0},
	{lang: 0xb3, script: 0xc9, flags: 0x0},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x144, script: 0x4b, flags: 0x0},
	{lang: 0x21, script: 0x1b, flags: 0x0},
	{lang: 0x104, script: 0x1b, flags: 0x0},
	{lang: 0x169, script: 0x4b, flags: 0x0},
	{lang: 0x106, script: 0x1b, flags: 0x0},
	{lang: 0xbf, script: 0x4, flags: 0x0},
	{lang: 0x1b8, script: 0x31, flags: 0x0},
	{lang: 0x13b, script: 0x4b, flags: 0x0},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0xfc, script: 0x4b, flags: 0x0},
	{lang: 0x1a2, script: 0x4, flags: 0x0},
	{lang: 0x24, script: 0x1d, flags: 0x0},
	{lang: 0x1a2, script: 0x4, flags: 0x0},
	{lang: 0x1a2, script: 0x4, flags: 0x0},
	{lang: 0x33, script: 0x1d, flags: 0x0},
	{lang: 0x137, script: 0x4b, flags: 0x0},
	{lang: 0x1b, script: 0x1b, flags: 0x0},
	{lang: 0x144, script: 0x4b, flags: 0x0},
	{lang: 0x21, script: 0x1b, flags: 0x0},
	{lang: 0x146, script: 0x1b, flags: 0x0},
	{lang: 0x6a, script: 0x4b, flags: 0x0},
	{lang: 0x15f, script: 0x4b, flags: 0x0},
	{lang: 0x19c, script: 0x1b, flags: 0x0},
	{lang: 0x168, script: 0x4b, flags: 0x0},
	{lang: 0x168, script: 0x4b, flags: 0x0},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x182, script: 0xc9, flags: 0x0},
	{lang: 0x109, script: 0x62, flags: 0x0},
	{lang: 0x181, script: 0x1b, flags: 0x0},
	{lang: 0x67, script: 0x4, flags: 0x0},
	{lang: 0x186, script: 0x4b, flags: 0x0},
	{lang: 0xd4, script: 0x4, flags: 0x0},
	{lang: 0xd, script: 0x4, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x18d, script: 0x4b, flags: 0x0},
	{lang: 0xd4, script: 0x4, flags: 0x0},
	{lang: 0xb0, script: 0x1b, flags: 0x0},
	{lang: 0x1b8, script: 0x31, flags: 0x0},
	{lang: 0x18e, script: 0x4b, flags: 0x0},
	{lang: 0x19c, script: 0x1b, flags: 0x0},
	{lang: 0x1b4, script: 0x33, flags: 0x0},
	{lang: 0x137, script: 0x4b, flags: 0x0},
	{lang: 0x6f, script: 0x4b, flags: 0x0},
	{lang: 0x175, script: 0x4, flags: 0x0},
}

type mutualIntelligibility struct {
	want   uint16
	have   uint16
	conf   uint8
	oneway bool
}

type scriptIntelligibility struct {
	want uint8
	have uint8
	conf uint8
}

// matchLang holds pairs of langIDs of base languages that are typically
// mutually intelligible. Each pair is associated with a confidence and
// whether the intelligibility goes one or both ways.
// Size: 66 bytes, 11 elements
var matchLang = [11]mutualIntelligibility{
	{want: 0x120, have: 0x122, conf: 0x2, oneway: false},
	{want: 0x16a, have: 0x90, conf: 0x2, oneway: false},
	{want: 0x15a, have: 0x16a, conf: 0x2, oneway: false},
	{want: 0x16e, have: 0x1, conf: 0x2, oneway: false},
	{want: 0x90, have: 0x31, conf: 0x2, oneway: false},
	{want: 0x15a, have: 0x31, conf: 0x2, oneway: false},
	{want: 0x16a, have: 0x31, conf: 0x2, oneway: false},
	{want: 0x15a, have: 0x90, conf: 0x2, oneway: false},
	{want: 0x4f, have: 0x122, conf: 0x1, oneway: false},
	{want: 0x10d, have: 0x98, conf: 0x1, oneway: false},
	{want: 0x81, have: 0x52, conf: 0x1, oneway: true},
}

// matchScript holds pairs of scriptIDs where readers of one script
// can typically also read the other. Each is associated with a confidence.
// Size: 6 bytes, 2 elements
var matchScript = [2]scriptIntelligibility{
	{want: 0x30, have: 0x31, conf: 0x1},
	{want: 0x31, have: 0x30, conf: 0x1},
}

// nRegionGroups is the number of region groups.  All regionIDs < nRegionGroups
// are groups.
const nRegionGroups = 32

// regionInclusion maps region identifiers to sets of regions in regionInclusionBits,
// where each set holds all groupings that are directly connected in a region
// containment graph.
// Size: 355 bytes, 355 elements
var regionInclusion = [355]uint8{
	0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10,
	11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
	23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36,
	37, 37, 34, 35, 37, 38, 33, 39, 40, 41, 42, 37,
	43, 35, 34, 37, 36, 41, 44, 45, 35, 46, 44, 37,
	47, 48, 39, 37, 39, 37, 36, 48, 33, 49, 50, 51,
	47, 33, 38, 38, 38, 52, 44, 40, 39, 38, 53, 39,
	33, 51, 34, 32, 37, 44, 37, 33, 54, 45, 52, 41,
	33, 46, 55, 37, 37, 32, 56, 56, 39, 55, 56, 56,
	46, 57, 46, 31, 55, 58, 39, 59, 43, 32, 41, 52,
	38, 55, 37, 35, 39, 43, 44, 34, 47, 44, 44, 37,
	38, 57, 33, 51, 59, 44, 39, 53, 33, 51, 34, 37,
	45, 32, 56, 48, 55, 35, 43, 36, 33, 35, 36, 43,
	57, 43, 37, 35, 53, 32, 46, 60, 48, 59, 46, 37,
	53, 53, 35, 37, 60, 48, 35, 37, 52, 36, 44, 49,
	55, 41, 55, 56, 56, 52, 50, 34, 37, 46, 59, 32,
	34, 44, 48, 53, 53, 59, 37, 44, 37, 57, 46, 36,
	46, 51, 48, 46, 49, 58, 44, 42, 44, 32, 51, 41,
	43, 36, 32, 59, 35, 40, 42, 35, 51, 32, 39, 40,
	58, 48, 36, 45, 47, 40, 37, 35, 57, 32, 59, 39,
	32, 35, 32, 32, 30, 32, 32, 32, 32, 32, 61, 32,
	32, 32, 32, 32, 46, 32, 45, 34, 50, 46, 35, 58,
	46, 56, 55, 48, 44, 57, 43, 45, 44, 34, 44, 46,
	39, 56, 38, 50, 51, 37, 35, 49, 33, 37, 38, 33,
	44, 48, 60, 40, 48, 60, 56, 40, 48, 35, 37, 40,
	53, 46, 50, 46, 32, 33, 47, 39, 60, 34, 37, 32,
	39, 37, 37, 48, 58, 40, 32, 40, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32, 35, 35,
	46, 34, 49, 46, 38, 46, 32,
}

// regionInclusionBits is an array of bit vectors where every vector represents
// a set of region groupings.  These sets are used to compute the distance
// between two regions for the purpose of language matching.
// Size: 300 bytes, 75 elements
var regionInclusionBits = [75]uint32{
	37750803, 1955, 14404, 536872968, 1077674001, 34, 536873028, 130, 258, 514, 1026, 536885325,
	6148, 536881156, 4210688, 4227072, 4259840, 33685504, 262160, 524304, 1048592, 2097168, 29474817, 12582912,
	20971520, 2650931201, 100663296, 167772160, 301989888, 536881224, 1073741840, 2181038080, 1, 1073741824, 131072, 16777216,
	32768, 8192, 512, 8, 2097152, 2415919104, 262144, 134217728, 32, 2214592512, 128, 4096,
	65536, 1024, 67108864, 64, 268435456, 16384, 2164260864, 2281701376, 256, 2147614720, 524288, 1048576,
	8388608, 33554432, 4294967295, 37752755, 1115424787, 574634079, 63031315, 2655127571, 2449473536, 2248146944, 2202009600, 2315255808,
	2181169152, 2680406017, 2680408083,
}

// regionInclusionNext marks, for each entry in regionInclusionBits, the set of
// all groups that are reachable from the groups set in the respective entry.
// Size: 75 bytes, 75 elements
var regionInclusionNext = [75]uint8{
	62, 63, 11, 11, 64, 1, 11, 1, 1, 1, 1, 65,
	11, 11, 22, 22, 22, 25, 4, 4, 4, 4, 66, 22,
	22, 67, 25, 25, 25, 11, 4, 25, 0, 30, 17, 24,
	15, 13, 9, 3, 21, 68, 18, 27, 5, 69, 7, 12,
	16, 10, 26, 6, 28, 14, 70, 71, 8, 72, 19, 20,
	23, 25, 62, 62, 62, 62, 62, 62, 25, 25, 73, 25,
	25, 74, 62,
}

// Size: 16.8K (17225 bytes); Check: 6CD0B27D
